00001000 Starting Address
Assembler used: EASy68K Editor/Assembler v5.16.01
Created On: 6/6/2020 8:25:18 PM

00000000                             1  **Dissassembler by Jacob McHugh, Kemba Konteh, Brian Clark
00000000                             2  **CSS422 Hardware
00000000                             3  ** Spring 2020
00000000                             4  **put variables and constants here
00000000                             5              OPT     CRE                 
00000000  =00001000                  6  start       EQU     $1000    
00000000                             7  
00000000                             8  
00000000                             9  LOADTESTDATA **loads the data from provided test file at the starting address above ^^^^
00000000  4E75                      10      RTS
00000002  4E71                      11      NOP
00000004  4E75                      12      RTS
00000006  41D0                      13      LEA     (A0),A0
00000008  41D5                      14      LEA     (A5),A0
0000000A  41D7                      15      LEA     (A7),A0
0000000C  4FD0                      16      LEA     (A0),A7
0000000E  4FD5                      17      LEA     (A5),A7
00000010  4FD7                      18      LEA     (A7),A7
00000012  4200                      19      CLR.B     D0
00000014  4207                      20      CLR.B     D7
00000016  4240                      21      CLR.W     D0
00000018  4247                      22      CLR.W     D7
0000001A  4280                      23      CLR.L     D0
0000001C  4287                      24      CLR.L     D7
0000001E  4210                      25      CLR.B     (A0)
00000020  4217                      26      CLR.B     (A7)
00000022  4250                      27      CLR.W     (A0)
00000024  4257                      28      CLR.W     (A7)
00000026  4290                      29      CLR.L     (A0)
00000028  4297                      30      CLR.L     (A7)
0000002A  4218                      31      CLR.B     (A0)+
0000002C  421F                      32      CLR.B     (A7)+
0000002E  4258                      33      CLR.W     (A0)+
00000030  425F                      34      CLR.W     (A7)+
00000032  4298                      35      CLR.L     (A0)+
00000034  429F                      36      CLR.L     (A7)+
00000036  4220                      37      CLR.B     -(A0)
00000038  4227                      38      CLR.B     -(A7)
0000003A  4260                      39      CLR.W     -(A0)
0000003C  4267                      40      CLR.W     -(A7)
0000003E  42A0                      41      CLR.L     -(A0)
00000040  42A7                      42      CLR.L     -(A7)
00000042  1200                      43      MOVE.B    D0,D1
00000044  1080                      44      MOVE.B    D0,(A0)
00000046  10C0                      45      MOVE.B    D0,(A0)+
00000048  1100                      46      MOVE.B    D0,-(A0)
0000004A  1010                      47      MOVE.B    (A0),D0
0000004C  1290                      48      MOVE.B    (A0),(A1)
0000004E  12D0                      49      MOVE.B    (A0),(A1)+
00000050  1310                      50      MOVE.B    (A0),-(A1)
00000052  1018                      51      MOVE.B    (A0)+,D0
00000054  1298                      52      MOVE.B    (A0)+,(A1)
00000056  12D8                      53      MOVE.B    (A0)+,(A1)+
00000058  1318                      54      MOVE.B    (A0)+,-(A1)
0000005A  1020                      55      MOVE.B    -(A0),D0
0000005C  12A0                      56      MOVE.B    -(A0),(A1)
0000005E  12E0                      57      MOVE.B    -(A0),(A1)+
00000060  1320                      58      MOVE.B    -(A0),-(A1)
00000062  3200                      59      MOVE.W    D0,D1
00000064  3080                      60      MOVE.W    D0,(A0)
00000066  30C0                      61      MOVE.W    D0,(A0)+
00000068  3100                      62      MOVE.W    D0,-(A0)
0000006A  3008                      63      MOVE.W    A0,D0
0000006C  3288                      64      MOVE.W    A0,(A1)
0000006E  32C8                      65      MOVE.W    A0,(A1)+
00000070  3308                      66      MOVE.W    A0,-(A1)
00000072  3010                      67      MOVE.W    (A0),D0
00000074  3290                      68      MOVE.W    (A0),(A1)
00000076  32D0                      69      MOVE.W    (A0),(A1)+
00000078  3310                      70      MOVE.W    (A0),-(A1)
0000007A  3018                      71      MOVE.W    (A0)+,D0
0000007C  3298                      72      MOVE.W    (A0)+,(A1)
0000007E  32D8                      73      MOVE.W    (A0)+,(A1)+
00000080  3318                      74      MOVE.W    (A0)+,-(A1)
00000082  3020                      75      MOVE.W    -(A0),D0
00000084  32A0                      76      MOVE.W    -(A0),(A1)
00000086  32E0                      77      MOVE.W    -(A0),(A1)+
00000088  3320                      78      MOVE.W    -(A0),-(A1)
0000008A  2200                      79      MOVE.L    D0,D1
0000008C  2080                      80      MOVE.L    D0,(A0)
0000008E  20C0                      81      MOVE.L    D0,(A0)+
00000090  2100                      82      MOVE.L    D0,-(A0)
00000092  2008                      83      MOVE.L    A0,D0
00000094  2288                      84      MOVE.L    A0,(A1)
00000096  22C8                      85      MOVE.L    A0,(A1)+
00000098  2308                      86      MOVE.L    A0,-(A1)
0000009A  2010                      87      MOVE.L    (A0),D0
0000009C  2290                      88      MOVE.L    (A0),(A1)
0000009E  22D0                      89      MOVE.L    (A0),(A1)+
000000A0  2310                      90      MOVE.L    (A0),-(A1)
000000A2  2018                      91      MOVE.L    (A0)+,D0
000000A4  2298                      92      MOVE.L    (A0)+,(A1)
000000A6  22D8                      93      MOVE.L    (A0)+,(A1)+
000000A8  2318                      94      MOVE.L    (A0)+,-(A1)
000000AA  2020                      95      MOVE.L    -(A0),D0
000000AC  22A0                      96      MOVE.L    -(A0),(A1)
000000AE  22E0                      97      MOVE.L    -(A0),(A1)+
000000B0  2320                      98      MOVE.L    -(A0),-(A1)
000000B2                            99      
000000B2                           100  
000000B2  48A1 007F                101          MOVEM.W   A1-A7,-(A1)
000000B6  48E1 7F00                102      MOVEM.L   D1-D7,-(A1)
000000BA  48A1 0140                103      MOVEM.W   A1/D7,-(A1)
000000BE  48E1 0140                104      MOVEM.L   A1/D7,-(A1)
000000C2  4891 FE00                105      MOVEM.W   A1-A7,(A1)
000000C6  48D1 00FE                106      MOVEM.L   D1-D7,(A1)
000000CA  4891 0280                107      MOVEM.W   A1/D7,(A1)
000000CE  48D1 0280                108      MOVEM.L   A1/D7,(A1)
000000D2  4C99 FE00                109      MOVEM.W   (A1)+,A1-A7
000000D6  4CD9 00FE                110      MOVEM.L   (A1)+,D1-D7
000000DA  4C99 0280                111      MOVEM.W   (A1)+,A1/D7
000000DE  4CD9 0280                112      MOVEM.L   (A1)+,A1/D7
000000E2  4C91 FE00                113      MOVEM.W   (A1),A1-A7
000000E6  4CD1 00FE                114      MOVEM.L   (A1),D1-D7
000000EA  4C91 0280                115      MOVEM.W   (A1),A1/D7
000000EE  4CD1 0280                116      MOVEM.L   (A1),A1/D7
000000F2  3040                     117      MOVEA.W    D0,A0
000000F4  3048                     118      MOVEA.W    A0,A0
000000F6  3050                     119      MOVEA.W    (A0),A0
000000F8  3058                     120      MOVEA.W    (A0)+,A0
000000FA  3060                     121      MOVEA.W    -(A0),A0
000000FC  2040                     122      MOVEA.L    D0,A0
000000FE  2048                     123      MOVEA.L    A0,A0
00000100  2050                     124      MOVEA.L    (A0),A0
00000102  2058                     125      MOVEA.L    (A0)+,A0
00000104  2060                     126      MOVEA.L    -(A0),A0  
00000106  D401                     127      ADD.B     D1,D2
00000108  D311                     128      ADD.B     D1,(A1)
0000010A  D319                     129      ADD.B     D1,(A1)+
0000010C  D321                     130      ADD.B     D1,-(A1)
0000010E  D211                     131      ADD.B     (A1),D1
00000110  D219                     132      ADD.B     (A1)+,D1
00000112  D221                     133      ADD.B     -(A1),D1
00000114  D441                     134      ADD.W     D1,D2
00000116  D351                     135      ADD.W     D1,(A1)
00000118  D359                     136      ADD.W     D1,(A1)+
0000011A  D361                     137      ADD.W     D1,-(A1)
0000011C  D251                     138      ADD.W     (A1),D1
0000011E  D259                     139      ADD.W     (A1)+,D1
00000120  D261                     140      ADD.W     -(A1),D1
00000122  D481                     141      ADD.L     D1,D2
00000124  D391                     142      ADD.L     D1,(A1)
00000126  D399                     143      ADD.L     D1,(A1)+
00000128  D3A1                     144      ADD.L     D1,-(A1)
0000012A  D291                     145      ADD.L     (A1),D1
0000012C  D299                     146      ADD.L     (A1)+,D1
0000012E  D2A1                     147      ADD.L     -(A1),D1
00000130  D4C1                     148      ADDA.W        D1,A2
00000132  D4D1                     149      ADDA.W        (A1),A2
00000134  D4D9                     150      ADDA.W        (A1)+,A2
00000136  D4E1                     151      ADDA.W        -(A1),A2
00000138  D5C1                     152      ADDA.L        D1,A2
0000013A  D5D1                     153      ADDA.L        (A1),A2
0000013C  D5D9                     154      ADDA.L        (A1)+,A2
0000013E  D5E1                     155      ADDA.L        -(A1),A2
00000140  9401                     156      SUB.B     D1,D2
00000142  9311                     157      SUB.B     D1,(A1)
00000144  9319                     158      SUB.B     D1,(A1)+
00000146  9321                     159      SUB.B     D1,-(A1)
00000148  9211                     160      SUB.B     (A1),D1
0000014A  9219                     161      SUB.B     (A1)+,D1
0000014C  9221                     162      SUB.B     -(A1),D1
0000014E  9441                     163      SUB.W     D1,D2
00000150  92C1                     164      SUB.W     D1,A1
00000152  9351                     165      SUB.W     D1,(A1)
00000154  9359                     166      SUB.W     D1,(A1)+
00000156  9361                     167      SUB.W     D1,-(A1)
00000158  9249                     168      SUB.W     A1,D1
0000015A  9251                     169      SUB.W     (A1),D1
0000015C  9259                     170      SUB.W     (A1)+,D1
0000015E  9261                     171      SUB.W     -(A1),D1
00000160  9481                     172      SUB.L     D1,D2
00000162  93C1                     173      SUB.L     D1,A1
00000164  9391                     174      SUB.L     D1,(A1)
00000166  9399                     175      SUB.L     D1,(A1)+
00000168  93A1                     176      SUB.L     D1,-(A1)
0000016A  9289                     177      SUB.L     A1,D1
0000016C  9291                     178      SUB.L     (A1),D1
0000016E  9299                     179      SUB.L     (A1)+,D1
00000170  92A1                     180      SUB.L     -(A1),D1    
00000172  C3C0                     181      MULS.W    D0,D1
00000174  C3D0                     182      MULS.W    (A0),D1
00000176  C3E0                     183      MULS.W    -(A0),D1
00000178  C3D8                     184      MULS.W    (A0)+,D1
0000017A  82C0                     185      DIVU.W    D0,D1
0000017C  82D0                     186      DIVU.W    (A0),D1
0000017E  82E0                     187      DIVU.W    -(A0),D1
00000180  82D8                     188      DIVU.W    (A0)+,D1
00000182  C401                     189      AND.B     D1,D2
00000184  C311                     190      AND.B     D1,(A1)
00000186  C319                     191      AND.B     D1,(A1)+
00000188  C321                     192      AND.B     D1,-(A1)
0000018A  C211                     193      AND.B     (A1),D1
0000018C  C219                     194      AND.B     (A1)+,D1
0000018E  C221                     195      AND.B     -(A1),D1
00000190  C441                     196      AND.W     D1,D2
00000192  C351                     197      AND.W     D1,(A1)
00000194  C359                     198      AND.W     D1,(A1)+
00000196  C361                     199      AND.W     D1,-(A1)
00000198  C251                     200      AND.W     (A1),D1
0000019A  C259                     201      AND.W     (A1)+,D1
0000019C  C261                     202      AND.W     -(A1),D1
0000019E  C481                     203      AND.L     D1,D2
000001A0  C391                     204      AND.L     D1,(A1)
000001A2  C399                     205      AND.L     D1,(A1)+
000001A4  C3A1                     206      AND.L     D1,-(A1)
000001A6  C291                     207      AND.L     (A1),D1
000001A8  C299                     208      AND.L     (A1)+,D1
000001AA  C2A1                     209      AND.L     -(A1),D1
000001AC  8401                     210      OR.B     D1,D2
000001AE  8311                     211      OR.B     D1,(A1)
000001B0  8319                     212      OR.B     D1,(A1)+
000001B2  8321                     213      OR.B     D1,-(A1)
000001B4  8211                     214      OR.B     (A1),D1
000001B6  8219                     215      OR.B     (A1)+,D1
000001B8  8221                     216      OR.B     -(A1),D1
000001BA  8441                     217      OR.W     D1,D2
000001BC  8351                     218      OR.W     D1,(A1)
000001BE  8359                     219      OR.W     D1,(A1)+
000001C0  8361                     220      OR.W     D1,-(A1)
000001C2  8251                     221      OR.W     (A1),D1
000001C4  8259                     222      OR.W     (A1)+,D1
000001C6  8261                     223      OR.W     -(A1),D1
000001C8  8481                     224      OR.L     D1,D2
000001CA  8391                     225      OR.L     D1,(A1)
000001CC  8399                     226      OR.L     D1,(A1)+
000001CE  83A1                     227      OR.L     D1,-(A1)
000001D0  8291                     228      OR.L     (A1),D1
000001D2  8299                     229      OR.L     (A1)+,D1
000001D4  82A1                     230      OR.L     -(A1),D1
000001D6  E32A                     231      LSL.B     D1,D2
000001D8  E36A                     232      LSL.W     D1,D2
000001DA  E3D1                     233      LSL.W     (A1)
000001DC  E3D9                     234      LSL.W     (A1)+
000001DE  E3E1                     235      LSL.W     -(A1)
000001E0  E3AA                     236      LSL.L     D1,D2
000001E2  E22A                     237      LSR.B     D1,D2
000001E4  E26A                     238      LSR.W     D1,D2
000001E6  E2D1                     239      LSR.W     (A1)
000001E8  E2D9                     240      LSR.W     (A1)+
000001EA  E2E1                     241      LSR.W     -(A1)
000001EC  E2AA                     242      LSR.L     D1,D2    
000001EE  E222                     243      ASR.B     D1,D2
000001F0  E262                     244      ASR.W     D1,D2
000001F2  E0D1                     245      ASR.W     (A1)
000001F4  E0D9                     246      ASR.W     (A1)+
000001F6  E0E1                     247      ASR.W     -(A1)
000001F8  E2A2                     248      ASR.L     D1,D2
000001FA  E322                     249      ASL.B     D1,D2
000001FC  E362                     250      ASL.W     D1,D2
000001FE  E1D1                     251      ASL.W     (A1)
00000200  E1D9                     252      ASL.W     (A1)+
00000202  E1E1                     253      ASL.W     -(A1)
00000204  E3A2                     254      ASL.L     D1,D2
00000206  E33A                     255      ROL.B     D1,D2
00000208  E37A                     256      ROL.W     D1,D2
0000020A  E7D1                     257      ROL.W     (A1)
0000020C  E7D9                     258      ROL.W     (A1)+
0000020E  E7E1                     259      ROL.W     -(A1)
00000210  E3BA                     260      ROL.L     D1,D2
00000212  E23A                     261      ROR.B     D1,D2
00000214  E27A                     262      ROR.W     D1,D2
00000216  E6D1                     263      ROR.W     (A1)
00000218  E6D9                     264      ROR.W     (A1)+
0000021A  E6E1                     265      ROR.W     -(A1)
0000021C  E2BA                     266      ROR.L     D1,D2    
0000021E  B200                     267      CMP.B    D0,D1
00000220  B210                     268      CMP.B    (A0),D1
00000222  B220                     269      CMP.B    -(A0),D1
00000224  B218                     270      CMP.B    (A0)+,D1
00000226  B240                     271      CMP.W    D0,D1
00000228  B248                     272      CMP.W    A0,D1
0000022A  B250                     273      CMP.W    (A0),D1
0000022C  B260                     274      CMP.W    -(A0),D1
0000022E  B258                     275      CMP.W    (A0)+,D1
00000230  B280                     276      CMP.L    D0,D1
00000232  B288                     277      CMP.L    A0,D1
00000234  B290                     278      CMP.L    (A0),D1
00000236  B2A0                     279      CMP.L    -(A0),D1
00000238  B298                     280      CMP.L    (A0)+,D1
0000023A  6450                     281      BCC.B     label1
0000023C  646E                     282      BCC.B     label2
0000023E  6E4C                     283      BGT.B     label1
00000240  6E6A                     284      BGT.B     label2
00000242  6F48                     285      BLE.B     label1
00000244  6F66                     286      BLE.B     label2
00000246  6400 0044                287      BCC.W     label1
0000024A  6400 0060                288      BCC.W     label2
0000024E  6400 0094                289      BCC.W     label3
00000252  6E00 0038                290      BGT.W     label1
00000256  6E00 0054                291      BGT.W     label2
0000025A  6E00 0088                292      BGT.W     label3
0000025E  6F00 002C                293      BLE.W     label1
00000262  6F00 0048                294      BLE.W     label2
00000266  6F00 007C                295      BLE.W     label3
0000026A  4E90                     296      JSR       (A0)
0000026C  4EB8 1234                297      JSR       $1234
00000270  4EB9 12345678            298      JSR       $12345678
00000276  4EB9 0000028C            299      JSR       label1
0000027C  4EB9 000002AC            300      JSR       label2
00000282  4EB9 000002E4            301      JSR       label3
00000288  4E71                     302      NOP
0000028A  4E75                     303      RTS
0000028C                           304  label1
0000028C  4E71                     305      NOP
0000028E  4E75                     306      RTS
00000290  41F8 0012                307      LEA       $12,A0
00000294  41F8 1234                308      LEA       $1234,A0
00000298  41F9 12345678            309      LEA       $12345678,A0
0000029E  4238 0012                310      CLR.B     $12
000002A2  4238 1234                311      CLR.B     $1234
000002A6  4239 12345678            312      CLR.B     $12345678
000002AC                           313  label2
000002AC  4278 0012                314      CLR.W     $12
000002B0  4278 1234                315      CLR.W     $1234
000002B4  4279 12345678            316      CLR.W     $12345678
000002BA  42B8 0012                317      CLR.L     $12
000002BE  42B8 1234                318      CLR.L     $1234
000002C2  42B9 12345678            319      CLR.L     $12345678
000002C8  7000                     320      MOVEQ     #$0,D0
000002CA  7012                     321      MOVEQ     #$12,D0
000002CC  70FF                     322      MOVEQ     #$FF,D0
000002CE  0601 0012                323      ADDI.B    #$12,D1
000002D2  0610 0012                324      ADDI.B    #$12,(A0)
000002D6  0618 0012                325      ADDI.B    #$12,(A0)+
000002DA  0620 0012                326      ADDI.B    #$12,-(A0)
000002DE  0638 0012 1234           327      ADDI.B    #$12,$1234
000002E4                           328  label3
000002E4  0639 0012 12345678       329      ADDI.B    #$12,$12345678
000002EC  0641 1234                330      ADDI.W    #$1234,D1
000002F0  0650 1234                331      ADDI.W    #$1234,(A0)
000002F4  0658 1234                332      ADDI.W    #$1234,(A0)+
000002F8  0660 1234                333      ADDI.W    #$1234,-(A0)
000002FC  0678 1234 1234           334      ADDI.W    #$1234,$1234
00000302  0679 1234 12345678       335      ADDI.W    #$1234,$12345678
0000030A  0681 12345678            336      ADDI.L    #$12345678,D1
00000310  0690 12345678            337      ADDI.L    #$12345678,(A0)
00000316  0698 12345678            338      ADDI.L    #$12345678,(A0)+
0000031C  06A0 12345678            339      ADDI.L    #$12345678,-(A0)
00000322  06B8 12345678 1234       340      ADDI.L    #$12345678,$1234
0000032A  06B9 12345678 12345678   341      ADDI.L    #$12345678,$12345678
00000334  5240                     342      ADDQ      #$1,D0
00000336  5640                     343      ADDQ      #$3,D0
00000338  5040                     344      ADDQ      #$8,D0
0000033A  1238 0012                345      MOVE.B    $12,D1
0000033E  10B8 0012                346      MOVE.B    $12,(A0)
00000342  10F8 0012                347      MOVE.B    $12,(A0)+
00000346  1138 0012                348      MOVE.B    $12,-(A0)
0000034A  1038 1234                349      MOVE.B    $1234,D0
0000034E  12B8 1234                350      MOVE.B    $1234,(A1)
00000352  12F8 1234                351      MOVE.B    $1234,(A1)+
00000356  1338 1234                352      MOVE.B    $1234,-(A1)
0000035A  1039 12345678            353      MOVE.B    $12345678,D0
00000360  12B9 12345678            354      MOVE.B    $12345678,(A1)
00000366  12F9 12345678            355      MOVE.B    $12345678,(A1)+
0000036C  1339 12345678            356      MOVE.B    $12345678,-(A1)
00000372  103C 0012                357      MOVE.B    #$12,D0
00000376  12BC 0012                358      MOVE.B    #$12,(A1)
0000037A  12FC 0012                359      MOVE.B    #$12,(A1)+
0000037E  133C 0012                360      MOVE.B    #$12,-(A1)
00000382  3238 0012                361      MOVE.W    $12,D1
00000386  30B8 0012                362      MOVE.W    $12,(A0)
0000038A  30F8 0012                363      MOVE.W    $12,(A0)+
0000038E  3138 0012                364      MOVE.W    $12,-(A0)
00000392  3038 1234                365      MOVE.W    $1234,D0
00000396  32B8 1234                366      MOVE.W    $1234,(A1)
0000039A  32F8 1234                367      MOVE.W    $1234,(A1)+
0000039E  3338 1234                368      MOVE.W    $1234,-(A1)
000003A2  3039 12345678            369      MOVE.W    $12345678,D0
000003A8  32B9 12345678            370      MOVE.W    $12345678,(A1)
000003AE  32F9 12345678            371      MOVE.W    $12345678,(A1)+
000003B4  3339 12345678            372      MOVE.W    $12345678,-(A1)
000003BA  303C 1234                373      MOVE.W    #$1234,D0
000003BE  32BC 1234                374      MOVE.W    #$1234,(A1)
000003C2  32FC 1234                375      MOVE.W    #$1234,(A1)+
000003C6  333C 1234                376      MOVE.W    #$1234,-(A1)
000003CA  2238 0012                377      MOVE.L    $12,D1
000003CE  20B8 0012                378      MOVE.L    $12,(A0)
000003D2  20F8 0012                379      MOVE.L    $12,(A0)+
000003D6  2138 0012                380      MOVE.L    $12,-(A0)
000003DA  2038 1234                381      MOVE.L    $1234,D0
000003DE  22B8 1234                382      MOVE.L    $1234,(A1)
000003E2  22F8 1234                383      MOVE.L    $1234,(A1)+
000003E6  2338 1234                384      MOVE.L    $1234,-(A1)
000003EA  2039 12345678            385      MOVE.L    $12345678,D0
000003F0  22B9 12345678            386      MOVE.L    $12345678,(A1)
000003F6  22F9 12345678            387      MOVE.L    $12345678,(A1)+
000003FC  2339 12345678            388      MOVE.L    $12345678,-(A1)
00000402  203C 12345678            389      MOVE.L    #$12345678,D0
00000408  22BC 12345678            390      MOVE.L    #$12345678,(A1)
0000040E  22FC 12345678            391      MOVE.L    #$12345678,(A1)+
00000414  233C 12345678            392      MOVE.L    #$12345678,-(A1)
0000041A  48B8 FE00 0012           393      MOVEM.W   A1-A7,$12
00000420  48F8 00FE 0012           394      MOVEM.L   D1-D7,$12
00000426  48B8 0280 0012           395      MOVEM.W   A1/D7,$12
0000042C  48F8 0280 0012           396      MOVEM.L   A1/D7,$12
00000432  48B8 FE00 1234           397      MOVEM.W   A1-A7,$1234
00000438  48F8 00FE 1234           398      MOVEM.L   D1-D7,$1234
0000043E  48B8 0280 1234           399      MOVEM.W   A1/D7,$1234
00000444  48F8 0280 1234           400      MOVEM.L   A1/D7,$1234
0000044A  48B9 FE00 12345678       401      MOVEM.W   A1-A7,$12345678
00000452  48F9 00FE 12345678       402      MOVEM.L   D1-D7,$12345678
0000045A  48B9 0280 12345678       403      MOVEM.W   A1/D7,$12345678
00000462  48F9 0280 12345678       404      MOVEM.L   A1/D7,$12345678
0000046A  4CB8 FE00 0012           405      MOVEM.W   $12,A1-A7
00000470  4CF8 00FE 0012           406      MOVEM.L   $12,D1-D7
00000476  4CB8 0280 0012           407      MOVEM.W   $12,A1/D7
0000047C  4CF8 0280 0012           408      MOVEM.L   $12,A1/D7
00000482  4CB8 FE00 1234           409      MOVEM.W   $1234,A1-A7
00000488  4CF8 00FE 1234           410      MOVEM.L   $1234,D1-D7
0000048E  4CB8 0280 1234           411      MOVEM.W   $1234,A1/D7
00000494  4CF8 0280 1234           412      MOVEM.L   $1234,A1/D7
0000049A  4CB9 FE00 12345678       413      MOVEM.W   $12345678,A1-A7
000004A2  4CF9 00FE 12345678       414      MOVEM.L   $12345678,D1-D7
000004AA  4CB9 0280 12345678       415      MOVEM.W   $12345678,A1/D7
000004B2  4CF9 0280 12345678       416      MOVEM.L   $12345678,A1/D7
000004BA  D338 0012                417      ADD.B     D1,$12
000004BE  D338 1234                418      ADD.B     D1,$1234
000004C2  D339 12345678            419      ADD.B     D1,$12345678
000004C8  D238 0012                420      ADD.B     $12,D1
000004CC  D238 1234                421      ADD.B     $1234,D1
000004D0  D239 12345678            422      ADD.B     $12345678,D1
000004D6  0601 0012                423      ADD.B     #$12,D1
000004DA  D378 0012                424      ADD.W     D1,$12
000004DE  D378 1234                425      ADD.W     D1,$1234
000004E2  D379 12345678            426      ADD.W     D1,$12345678
000004E8  D278 0012                427      ADD.W     $12,D1
000004EC  D278 1234                428      ADD.W     $1234,D1
000004F0  D279 12345678            429      ADD.W     $12345678,D1
000004F6  0641 1234                430      ADD.W     #$1234,D1
000004FA  D3B8 0012                431      ADD.L     D1,$12
000004FE  D3B8 1234                432      ADD.L     D1,$1234
00000502  D3B9 12345678            433      ADD.L     D1,$12345678
00000508  D2B8 0012                434      ADD.L     $12,D1
0000050C  D2B8 1234                435      ADD.L     $1234,D1
00000510  D2B9 12345678            436      ADD.L     $12345678,D1
00000516  0681 12345678            437      ADD.L     #$12345678,D1
0000051C  D4F8 0012                438      ADDA.W    $12,A2
00000520  D4F8 1234                439      ADDA.W    $1234,A2
00000524  D4F9 12345678            440      ADDA.W    $12345678,A2
0000052A  D4FC 1234                441      ADDA.W    #$1234,A2
0000052E  D5F8 0012                442      ADDA.L    $12,A2
00000532  D5F8 1234                443      ADDA.L    $1234,A2
00000536  D5F9 12345678            444      ADDA.L    $12345678,A2
0000053C  D5FC 12345678            445      ADDA.L    #$12345678,A2
00000542  9338 0012                446      SUB.B     D1,$12
00000546  9338 1234                447      SUB.B     D1,$1234
0000054A  9339 12345678            448      SUB.B     D1,$12345678
00000550  9238 0012                449      SUB.B     $12,D1
00000554  9238 1234                450      SUB.B     $1234,D1
00000558  9239 12345678            451      SUB.B     $12345678,D1
0000055E  0401 0012                452      SUB.B     #$12,D1
00000562  9378 0012                453      SUB.W     D1,$12
00000566  9378 1234                454      SUB.W     D1,$1234
0000056A  9379 12345678            455      SUB.W     D1,$12345678
00000570  9278 0012                456      SUB.W     $12,D1
00000574  9278 1234                457      SUB.W     $1234,D1
00000578  9279 12345678            458      SUB.W     $12345678,D1
0000057E  0441 1234                459      SUB.W     #$1234,D1
00000582  93B8 0012                460      SUB.L     D1,$12
00000586  93B8 1234                461      SUB.L     D1,$1234
0000058A  93B9 12345678            462      SUB.L     D1,$12345678
00000590  92B8 0012                463      SUB.L     $12,D1
00000594  92B8 1234                464      SUB.L     $1234,D1
00000598  92B9 12345678            465      SUB.L     $12345678,D1
0000059E  0481 12345678            466      SUB.L     #$12345678,D1
000005A4  C3F8 0012                467      MULS.W    $12,D1
000005A8  C3F8 1234                468      MULS.W    $1234,D1
000005AC  C3F9 12345678            469      MULS.W    $12345678,D1
000005B2  C3FC 1234                470      MULS.W    #$1234,D1
000005B6  82F8 0012                471      DIVU.W    $12,D1
000005BA  82F8 1234                472      DIVU.W    $1234,D1
000005BE  82F9 12345678            473      DIVU.W    $12345678,D1
000005C4  82FC 1234                474      DIVU.W    #$1234,D1
000005C8  C338 0012                475      AND.B     D1,$12
000005CC  C338 1234                476      AND.B     D1,$1234
000005D0  C339 12345678            477      AND.B     D1,$12345678
000005D6  C238 0012                478      AND.B     $12,D1
000005DA  C238 1234                479      AND.B     $1234,D1
000005DE  C239 12345678            480      AND.B     $12345678,D1
000005E4  C23C 0012                481      AND.B     #$12,D1
000005E8  C378 0012                482      AND.W     D1,$12
000005EC  C378 1234                483      AND.W     D1,$1234
000005F0  C379 12345678            484      AND.W     D1,$12345678
000005F6  C278 0012                485      AND.W     $12,D1
000005FA  C278 1234                486      AND.W     $1234,D1
000005FE  C279 12345678            487      AND.W     $12345678,D1
00000604  C27C 1234                488      AND.W     #$1234,D1
00000608  C3B8 0012                489      AND.L     D1,$12
0000060C  C3B8 1234                490      AND.L     D1,$1234
00000610  C3B9 12345678            491      AND.L     D1,$12345678
00000616  C2B8 0012                492      AND.L     $12,D1
0000061A  C2B8 1234                493      AND.L     $1234,D1
0000061E  C2B9 12345678            494      AND.L     $12345678,D1
00000624  C2BC 12345678            495      AND.L     #$12345678,D1
0000062A  E30A                     496      LSL.B     #$1,D2
0000062C  E54A                     497      LSL.W     #$2,D2
0000062E  E78A                     498      LSL.L     #$3,D2
00000630  E3F8 0012                499      LSL.W     $12
00000634  E3F8 1234                500      LSL.W     $1234
00000638  E3F9 12345678            501      LSL.W     $12345678
0000063E  E202                     502      ASR.B     #$1,D2
00000640  E442                     503      ASR.W     #$2,D2
00000642  E682                     504      ASR.L     #$3,D2
00000644  E0F8 0012                505      ASR.W     $12
00000648  E0F8 1234                506      ASR.W     $1234
0000064C  E0F9 12345678            507      ASR.W     $12345678
00000652  E31A                     508      ROL.B     #$1,D2
00000654  E55A                     509      ROL.W     #$2,D2
00000656  E79A                     510      ROL.L     #$3,D2
00000658  E7F8 0012                511      ROL.W     $12
0000065C  E7F8 1234                512      ROL.W     $1234
00000660  E7F9 12345678            513      ROL.W     $12345678
00000666  B238 0012                514  label4    CMP.B     $12,D1
0000066A  B238 1234                515      CMP.B     $1234,D1
0000066E  B239 12345678            516      CMP.B     $12345678,D1
00000674  B23C 0012                517      CMP.B     #$12,D1
00000678  B278 0012                518      CMP.W     $12,D1
0000067C  B278 1234                519      CMP.W     $1234,D1
00000680  B279 12345678            520      CMP.W     $12345678,D1
00000686  B27C 1234                521      CMP.W     #$1234,D1
0000068A  B2B8 0012                522      CMP.L     $12,D1
0000068E  B2B8 1234                523      CMP.L     $1234,D1
00000692  B2B9 12345678            524      CMP.L     $12345678,D1
00000698  B2BC 12345678            525      CMP.L     #$12345678,D1
0000069E  64C6                     526      BCC.B     label4
000006A0  6EC4                     527      BGT.B     label4
000006A2  6FC2                     528      BLE.B     label4
000006A4  6400 FBE6                529      BCC.W     label1
000006A8  6400 FC02                530      BCC.W     label2
000006AC  6400 FC36                531      BCC.W     label3
000006B0  6E00 FBDA                532      BGT.W     label1
000006B4  6E00 FBF6                533      BGT.W     label2
000006B8  6E00 FC2A                534      BGT.W     label3
000006BC  6F00 FBCE                535      BLE.W     label1
000006C0  6F00 FBEA                536      BLE.W     label2
000006C4  6F00 FC1E                537      BLE.W     label3
000006C8  4EB8 028C                538      JSR       label1
000006CC  4EB8 02AC                539      JSR       label2
000006D0  4EB8 02E4                540      JSR       label3
000006D4  3241                     541      MOVEA     D1,A1
000006D6  D2C1                     542      ADDA      D1,A1
000006D8  0801 0001                543      BTST      #1,D1
000006DC                           544  
000006DC                           545  
000006DC                           546             
000006DC  =00004000                547  data        EQU     $4000               
000006DC  =0000A000                548  stack       EQU     $A000               
000006DC  =00000000                549  MIN_ADD      EQU     $00000000          
000006DC  =00FFFFFF                550  MAX_ADD      EQU     $00FFFFFF 
000006DC  =00000000                551  FLAG_BAD     EQU     0          
000006DC  =00000001                552  FLAG_GOOD    EQU     1           
000006DC  =00000004                553  FOUR_BITSHIFT      EQU     4            
000006DC  =00000008                554  EIGHT_BITSHIFT      EQU     8   
000006DC  =0000000C                555  TWELVE_BITSHIFT     EQU     12
000006DC  =00000010                556  SIXTEEN_BITSHIFT     EQU     16
000006DC  =00000000                557  T_0       EQU     00 
000006DC  =00000001                558  T_1       EQU     01
000006DC  =00000002                559  T_2       EQU     02
000006DC  =0000000D                560  T_13      EQU     13 
000006DC  =00000000                561  length      EQU     0  
000006DC  =00000014                562  P_COUNTER  EQU     20  
000006DC  =0000000D                563  CR          EQU     $0D  
000006DC  =0000000A                564  LF          EQU     $0A 
000006DC                           565  
000006DC                           566  
00001000                           567              ORG     start
00001000                           568              
00001000  6100 005A                569              BSR     MESSAGE_introduction_message         * introduction_message
00001004  6100 007E                570  STARTMAIN   BSR     CLEAR               
00001008  4FF9 0000A000            571              LEA     stack,SP    
0000100E  45F9 00004142            572              LEA     goodbuff,A2
00001014  2C4A                     573              MOVEA.L A2,A6
00001016                           574      
00001016  6100 00F0                575  STARTINPUT    BSR     INPUT
0000101A                           576  
0000101A                           577  **get user input for start and end position
0000101A  6100 007A                578              BSR     CHECK_ADD            
0000101E  BA7C 0000                579              CMP     #FLAG_BAD,D5
00001022  67F2                     580              BEQ     STARTINPUT 
00001024                           581              
00001024  6100 01E8                582              BSR     PREP_BUFFER
00001028                           583              
00001028  103C 0001                584              MOVE.B  #T_1,D0
0000102C  43F9 000040FE            585              LEA     MESSAGE_MORE,A1
00001032  3239 00004114            586              MOVE.W  strMore_len,D1
00001038  4E4F                     587              TRAP    #15
0000103A                           588              
0000103A  103C 0002                589              MOVE.B  #T_2,D0
0000103E  4E4F                     590              TRAP    #15
00001040                           591              
00001040  1611                     592              MOVE.B  (A1),D3 
00001042                           593              
00001042  12FC 0057                594              MOVE.B  #$57,(A1)+ 
00001046  12BC 006F                595              MOVE.B  #$6F,(A1)  
0000104A                           596              
0000104A  B63C 0031                597              CMP.B   #$31,D3
0000104E  67B4                     598              BEQ     STARTMAIN
00001050                           599               
00001050  67B2                     600              BEQ     STARTMAIN
00001052                           601              
00001052  6100 001C                602              BSR     MESSAGE_EXIT
00001056                           603                           
00001056  4EF9 00004144            604              JMP     end
0000105C                           605          
0000105C                           606  
0000105C                           607  **legend for next section
0000105C                           608  *A0 starting address
0000105C                           609  *A4 ending address
0000105C                           610  
0000105C                           611  
0000105C                           612  MESSAGE_introduction_message
0000105C  103C 000D                613              MOVE.B  #13,D0
00001060  43F9 00004000            614              LEA     introduction_message,A1
00001066  3239 0000405E            615              MOVE.W  introduction_message_len,D1
0000106C  4E4F                     616              TRAP    #15
0000106E  4E75                     617              RTS
00001070                           618  
00001070                           619  MESSAGE_EXIT            
00001070  103C 0001                620              MOVE.B  #T_1,D0
00001074  43F9 00004130            621              LEA     exit,A1
0000107A  3239 00004140            622              MOVE.W  exit_len,D1
00001080  4E4F                     623              TRAP    #15
00001082  4E75                     624              RTS        
00001084                           625  
00001084                           626  CLEAR:
00001084  4240                     627              CLR     D0
00001086  4241                     628              CLR     D1
00001088  4242                     629              CLR     D2
0000108A  4243                     630              CLR     D3
0000108C  4244                     631              CLR     D4
0000108E  4245                     632              CLR     D5
00001090  4246                     633              CLR     D6
00001092  4247                     634              CLR     D7
00001094                           635              
00001094  4E75                     636              RTS
00001096                           637                 
00001096                           638  CHECK_ADD:
00001096                           639  CHECKA_START
00001096  BA3C 0000                640              CMP.B   #$00,D5
0000109A  6700 0054                641              BEQ     ERROR_CHECKA
0000109E  1A3C 0001                642              MOVE.B  #FLAG_GOOD,D5
000010A2                           643  
000010A2  2408                     644  F_ADD    MOVE.L  A0,D2 
000010A4  2602                     645              MOVE.L  D2,D3
000010A6  0203 0001                646              ANDI.B  #1,D3
000010AA  B63C 0001                647              CMP.B   #1,D3
000010AE  6600 0006                648              BNE     L_ADD
000010B2  5302                     649  SUB_I        SUBI.B  #$1,D2 * odd address will be even
000010B4  2042                     650              MOVE.L  D2,A0
000010B6  240C                     651  L_ADD     MOVE.L  A4,D2
000010B8  2602                     652              MOVE.L  D2,D3
000010BA  0203 0001                653              ANDI.B  #1,D3
000010BE  B63C 0001                654              CMP.B   #1,D3
000010C2  6600 0006                655              BNE     EQU_1 
000010C6  5302                     656  SUB_TWO        SUBI.B  #$1,D2 **odd address will be even
000010C8  2842                     657              MOVE.L  D2,A4
000010CA                           658     
000010CA  B1FC 00FFFFFF            659  EQU_1       CMP.L   #MAX_ADD,A0 **check high end range of starting address
000010D0  6D00 0008                660              BLT     EQU_2
000010D4                           661           
000010D4  4EF9 000010F0            662              JMP     ERROR_CHECKA
000010DA                           663              
000010DA  B9FC 00FFFFFF            664  EQU_2        CMP.L   #MAX_ADD,A4 **check high end range of ending address
000010E0  6F00 0008                665              BLE     EQU_3
000010E4  4EF9 000010F0            666              JMP     ERROR_CHECKA                     
000010EA                           667              
000010EA  B9C8                     668  EQU_3        CMPA.L  A0,A4 **is the starting address greater than the ending address?
000010EC  6E00 0018                669              BGT     END_CHECKA
000010F0                           670                 
000010F0                           671  ERROR_CHECKA    *error
000010F0  103C 0000                672              MOVE.B  #T_0,D0
000010F4  43F9 0000408A            673              LEA     MESSAGE_END_ERROR1,A1
000010FA  3239 000040AC            674              MOVE.W  str_len3,D1
00001100  4E4F                     675              TRAP    #15            
00001102  1A3C 0000                676              MOVE.B  #FLAG_BAD,D5      
00001106  4E75                     677  END_CHECKA      RTS
00001108                           678  
00001108                           679  INPUT:
00001108  103C 0001                680              MOVE.B  #T_1,D0
0000110C  43F9 00004060            681              LEA     MESSAGE_START_ADDR,A1
00001112  3239 00004074            682              MOVE.W  str_len1,D1         
00001118  4E4F                     683              TRAP    #15
0000111A  D3FC 00004074            684              ADDA.L  #str_len1,A1 **add the end
00001120  103C 0002                685              MOVE.B  #T_2,D0      
00001124  4E4F                     686              TRAP    #15
00001126  4EB9 0000116A            687              JSR     ASCII_2_HEX  **convert ascii to hex
0000112C  BA3C 0000                688              CMP.B   #$00,D5
00001130  6700 0036                689              BEQ     endInput
00001134                           690              
00001134  2848                     691              MOVEA.L A0,A4         
00001136  103C 0001                692              MOVE.B  #T_1,D0
0000113A  43F9 00004076            693              LEA     MESSAGE_END_ADDR,A1
00001140  3239 00004088            694              MOVE.W  str_len2,D1         
00001146  4E4F                     695              TRAP    #15         
00001148  D3FC 00004088            696              ADDA.L  #str_len2,A1
0000114E  103C 0002                697              MOVE.B  #T_2,D0
00001152  4E4F                     698              TRAP    #15
00001154  4EB9 0000116A            699              JSR     ASCII_2_HEX
0000115A  BA3C 0000                700              CMP.B   #$00,D5
0000115E  6700 0008                701              BEQ     endInput
00001162                           702              
00001162  264C                     703              MOVEA.L A4,A3
00001164  2848                     704              MOVEA.L A0,A4
00001166  204B                     705              MOVEA.L A3,A0                   
00001168  4E75                     706  endInput    RTS
0000116A                           707  
0000116A                           708  ASCII_2_HEX
0000116A                           709  
0000116A  48E7 F800                710              MOVEM.L D0-D4,-(SP)
0000116E  1A3C 0001                711              MOVE.B  #FLAG_GOOD,D5
00001172  4EB9 00001D6A            712              JSR     CLEAR_REGISTERS
00001178  3C3C 0000                713              MOVE    #length,D6      
0000117C                           714        
0000117C  1619                     715  LOOP_TWO       MOVE.B  (A1)+,D3 **checking range of ascii byte
0000117E  B63C 0030                716              CMP.B   #$30,D3 
00001182  6D00 0068                717              BLT     ERROR_ASCII
00001186  B63C 003A                718              CMP.B   #$3A,D3
0000118A  6D00 0042                719              BLT     DEC_2_HEX      
0000118E  B63C 0041                720              CMP.B   #$41,D3
00001192  6D00 0058                721              BLT     ERROR_ASCII
00001196  B63C 0047                722              CMP.B   #$47,D3
0000119A  6D00 003C                723              BLT     C_2_HEX
0000119E  B63C 0061                724              CMP.B   #$61,D3
000011A2  6D00 0048                725              BLT     ERROR_ASCII
000011A6  B63C 0067                726              CMP.B   #$67,D3
000011AA  6D00 0036                727              BLT     L_2_HEX
000011AE  B63C 0066                728              CMP.B   #$66,D3
000011B2  6E00 0038                729              BGT     ERROR_ASCII  
000011B6                           730        
000011B6                           731  resume    
000011B6  5246                     732              ADD     #1,D6
000011B8  BC7C 0006                733              CMP     #6,D6
000011BC  6700 0038                734              BEQ     return          
000011C0  0C11 0000                735              CMP.B   #$00,(A1)
000011C4  6700 0030                736              BEQ     return 
000011C8  E984                     737              ASL.L   #4,D4          
000011CA  4EF8 117C                738              JMP     LOOP_TWO
000011CE                           739  
000011CE                           740  DEC_2_HEX
000011CE  0403 0030                741              SUBI.B  #$30,D3
000011D2  D803                     742              ADD.B   D3,D4
000011D4  4EF8 11B6                743              JMP     resume
000011D8                           744  
000011D8                           745  C_2_HEX
000011D8                           746  
000011D8  0403 0037                747              SUBI.B  #$37,D3
000011DC  D803                     748              ADD.B   D3,D4
000011DE  4EF8 11B6                749              JMP     resume
000011E2                           750  
000011E2                           751  L_2_HEX
000011E2  0403 0057                752              SUBI.B  #$57,D3
000011E6  D803                     753              ADD.B   D3,D4
000011E8  4EF8 11B6                754              JMP     resume
000011EC                           755  
000011EC  1A3C 0000                756  ERROR_ASCII  MOVE.B  #00,D5   
000011F0  4EF9 000011F6            757              JMP     return
000011F6                           758  
000011F6  2044                     759  return      MOVE.L  D4,A0
000011F8  4246                     760              CLR     D6
000011FA  4CDF 001F                761              MOVEM.L (SP)+,D0-D4    
000011FE  4E75                     762              RTS
00001200                           763          
00001200                           764  
00001200                           765  FILL_ADDRESS:
00001200  224A                     766              MOVEA.L  A2,A1         
00001202  4EB9 00001C6A            767              JSR      GET_LONG
00001208  14FC 0009                768              MOVE.B   #$09,(A2)+                                   
0000120C  4E75                     769              RTS
0000120E                           770            
0000120E                           771              
0000120E                           772  
0000120E                           773  ** legend for next section
0000120E                           774  * A0 address
0000120E                           775  * A1 trap addr
0000120E                           776  * A2 bfr ptr
0000120E                           777  * A4 end addr
0000120E                           778  * D0 task#
0000120E                           779  * D1 stored length
0000120E                           780  * D7 counter
0000120E                           781  
0000120E  244E                     782  PREP_BUFFER    MOVEA.L A6,A2         
00001210  61EE                     783              BSR     FILL_ADDRESS        * store current address
00001212  4EB9 00001254            784              JSR     DECODE_OPCODE
00001218  14BC 0000                785              MOVE.B  #00,(A2)
0000121C  103C 000D                786              MOVE.B  #T_13,D0
00001220  4E4F                     787              TRAP    #15
00001222                           788                                
00001222  B9C8                     789              CMPA.L   A0,A4
00001224  6F00 002C                790              BLE      END_BUFFER
00001228                           791              
00001228  5247                     792              ADDI    #1,D7
0000122A  BE7C 0014                793              CMP     #P_COUNTER,D7
0000122E  66DE                     794              BNE     PREP_BUFFER
00001230                           795              
00001230  103C 0001                796              MOVE.B  #T_1,D0
00001234  43F9 000040E4            797              LEA     MESSAGE_CONTINUE,A1
0000123A  3239 000040FC            798              MOVE.W  str_en_len,D1
00001240  4E4F                     799              TRAP    #15
00001242                           800              
00001242  103C 0002                801              MOVE.B  #T_2,D0
00001246  4E4F                     802              TRAP    #15
00001248                           803              
00001248  12BC 0050                804              MOVE.B  #$50,(A1)
0000124C                           805              
0000124C  4247                     806              CLR     D7
0000124E  4EF8 120E                807              JMP     PREP_BUFFER
00001252                           808              
00001252  4E75                     809  END_BUFFER     RTS 
00001254                           810  
00001254                           811         
00001254                           812  **legend for next section
00001254                           813  
00001254                           814  
00001254                           815  *A0,A5 Mem ptr
00001254                           816  *A2 +bfr ptr
00001254                           817  *A5 jump table index
00001254                           818  *A6 prev bfr location
00001254                           819  *D2 size of function
00001254                           820  *D4 shift size
00001254                           821  *D5 P/F flg
00001254                           822  *D6 copy D7
00001254                           823  *D7 word value
00001254                           824  
00001254  48E7 FB0E                825  DECODE_OPCODE    MOVEM.L A4-A6/D0-D4/D6-D7,-(SP)
00001258  4EB9 00001D6A            826              JSR     CLEAR_REGISTERS
0000125E  1A3C 0001                827              MOVE.B  #FLAG_GOOD,D5
00001262  3E18                     828              MOVE.W  (A0)+,D7
00001264  264A                     829              MOVEA.L A2,A3               
00001266  4EB9 00001272            830              JSR     GET_OPCODE
0000126C                           831  
0000126C  4CDF 70DF                832  DECODE_RTN    MOVEM.L (SP)+,D6-D7/D0-D4/A4-A6
00001270  4E75                     833              RTS
00001272                           834              
00001272                           835                               
00001272  3C07                     836  GET_OPCODE  MOVE.W  D7,D6
00001274  183C 000C                837              MOVE.B  #TWELVE_BITSHIFT,D4
00001278  E86E                     838              LSR.W   D4,D6
0000127A  CCFC 0006                839              MULU    #6,D6
0000127E  4BF9 0000128A            840              LEA     OPCODE_JMPTBL,A5
00001284  4EB5 6000                841              JSR     00(A5,D6)
00001288  4E75                     842              RTS
0000128A                           843  
0000128A                           844  OPCODE_JMPTBL      
0000128A  4EF9 000012EA            845              JMP     HEX_ONE_0000
00001290  4EF9 000012EA            846              JMP     HEX_ONE_0001            
00001296  4EF9 00001326            847              JMP     HEX_ONE_0010
0000129C  4EF9 0000138C            848              JMP     HEX_ONE_0011
000012A2  4EF9 00001446            849              JMP     HEX_ONE_0100
000012A8  4EF9 000014AA            850              JMP     HEX_ONE_0101
000012AE  4EF9 000014B2            851              JMP     HEX_ONE_0110
000012B4  4EF9 000014BC            852              JMP     HEX_ONE_0111
000012BA  4EF9 000014C4            853              JMP     HEX_ONE_1000
000012C0  4EF9 0000153E            854              JMP     HEX_ONE_1001
000012C6  4EF9 000015B0            855              JMP     HEX_ONE_1010
000012CC  4EF9 00001644            856              JMP     HEX_ONE_1011
000012D2  4EF9 00001736            857              JMP     HEX_ONE_1100
000012D8  4EF9 00001882            858              JMP     HEX_ONE_1101
000012DE  4EF9 000018F0            859              JMP     HEX_ONE_1110
000012E4  4EF9 00001A58            860              JMP     HEX_ONE_1111
000012EA                           861  **move.b
000012EA                           862  
000012EA                           863  HEX_ONE_0000
000012EA                           864  
000012EA  14FC 004D                865  HEX_ONE_0001   MOVE.B  #'M',(A2)+
000012EE  14FC 004F                866              MOVE.B  #'O',(A2)+
000012F2  14FC 0056                867              MOVE.B  #'V',(A2)+
000012F6  14FC 0045                868              MOVE.B  #'E',(A2)+
000012FA  14FC 002E                869              MOVE.B  #'.',(A2)+
000012FE  14FC 0042                870              MOVE.B  #'B',(A2)+
00001302  14FC 0020                871              MOVE.B  #' ',(A2)+
00001306  14FC 0020                872              MOVE.B  #' ',(A2)+
0000130A  14FC 0020                873              MOVE.B  #' ',(A2)+  
0000130E  4EB9 00001D92            874              JSR     GET_EA
00001314  14FC 002C                875              MOVE.B  #',',(A2)+
00001318  4EB9 000013F2            876              JSR     SWAP_4_MOVE
0000131E  4EB9 00001D92            877              JSR     GET_EA     
00001324  4E75                     878  END_0001     RTS 
00001326                           879              
00001326                           880  **move.l, movea.l
00001326  14FC 004D                881  HEX_ONE_0010   MOVE.B  #'M',(A2)+
0000132A  14FC 004F                882              MOVE.B  #'O',(A2)+
0000132E  14FC 0056                883              MOVE.B  #'V',(A2)+
00001332  14FC 0045                884              MOVE.B  #'E',(A2)+
00001336  1C07                     885              MOVE.B  D7,D6
00001338  EC8E                     886              LSR.L   #6,D6
0000133A  0246 0007                887              ANDI.W  #$07,D6
0000133E  BC3C 0001                888              CMP.B   #$1,D6 **is this movea
00001342  6600 001C                889              BNE     MOVE_L
00001346  14FC 0041                890              MOVE.B  #'A',(A2)+
0000134A  14FC 002E                891              MOVE.B  #'.',(A2)+
0000134E  14FC 004C                892              MOVE.B  #'L',(A2)+
00001352  14FC 0020                893              MOVE.B  #' ',(A2)+
00001356  14FC 0020                894              MOVE.B  #' ',(A2)+
0000135A  4EF9 00001374            895              JMP     MOVE_LEA
00001360  14FC 002E                896  MOVE_L       MOVE.B  #'.',(A2)+
00001364  14FC 004C                897              MOVE.B  #'L',(A2)+
00001368  14FC 0020                898              MOVE.B  #' ',(A2)+
0000136C  14FC 0020                899              MOVE.B  #' ',(A2)+
00001370  14FC 0020                900              MOVE.B  #' ',(A2)+  
00001374  4EB9 00001D92            901  MOVE_LEA     JSR     GET_EA
0000137A  14FC 002C                902              MOVE.B  #',',(A2)+
0000137E  4EB9 000013F2            903              JSR     SWAP_4_MOVE
00001384  4EB9 00001D92            904              JSR     GET_EA     
0000138A  4E75                     905  END_0010     RTS
0000138C                           906   
0000138C                           907   
0000138C                           908   
0000138C                           909  **move.w, movea.w
0000138C  14FC 004D                910  HEX_ONE_0011   MOVE.B  #'M',(A2)+
00001390  14FC 004F                911              MOVE.B  #'O',(A2)+
00001394  14FC 0056                912              MOVE.B  #'V',(A2)+
00001398  14FC 0045                913              MOVE.B  #'E',(A2)+
0000139C  1C07                     914              MOVE.B  D7,D6
0000139E  EC8E                     915              LSR.L   #6,D6
000013A0  0246 0007                916              ANDI.W  #$07,D6
000013A4  BC3C 0001                917              CMP.B   #$1,D6
000013A8  6600 001C                918              BNE     MOVE_W **is thsi movea
000013AC  14FC 0041                919              MOVE.B  #'A',(A2)+
000013B0  14FC 002E                920              MOVE.B  #'.',(A2)+
000013B4  14FC 0057                921              MOVE.B  #'W',(A2)+
000013B8  14FC 0020                922              MOVE.B  #' ',(A2)+
000013BC  14FC 0020                923              MOVE.B  #' ',(A2)+
000013C0  4EF9 000013DA            924              JMP     MOVE_WEA
000013C6  14FC 002E                925  MOVE_W       MOVE.B  #'.',(A2)+
000013CA  14FC 0057                926              MOVE.B  #'W',(A2)+
000013CE  14FC 0020                927              MOVE.B  #' ',(A2)+
000013D2  14FC 0020                928              MOVE.B  #' ',(A2)+
000013D6  14FC 0020                929              MOVE.B  #' ',(A2)+  
000013DA  4EB9 00001D92            930  MOVE_WEA     JSR     GET_EA
000013E0  14FC 002C                931              MOVE.B  #',',(A2)+
000013E4  4EB9 000013F2            932              JSR     SWAP_4_MOVE
000013EA  4EB9 00001D92            933              JSR     GET_EA     
000013F0  4E75                     934  END_0011     RTS 
000013F2                           935  
000013F2                           936  
000013F2                           937  
000013F2  4283                     938  SWAP_4_MOVE   CLR.L   D3
000013F4  3C07                     939              MOVE.W  D7,D6
000013F6  E04E                     940              LSR.W   #EIGHT_BITSHIFT,D6
000013F8  E24E                     941              LSR.W   #1,D6
000013FA  0246 0007                942              ANDI.W  #$0007,D6
000013FE  8646                     943              OR.W    D6,D3
00001400  3C07                     944              MOVE.W  D7,D6
00001402  E64E                     945              LSR.W   #3,D6
00001404  0246 0038                946              ANDI.W  #$0038,D6
00001408  8646                     947              OR.W    D6,D3
0000140A  4EB9 00001414            948              JSR     MOVE_SIZE
00001410  3E03                     949              MOVE.W  D3,D7
00001412  4E75                     950              RTS
00001414                           951              
00001414                           952              
00001414  3C07                     953  MOVE_SIZE    MOVE.W  D7,D6
00001416  E04E                     954              LSR.W   #EIGHT_BITSHIFT,D6
00001418  E84E                     955              LSR.W   #FOUR_BITSHIFT,D6          
0000141A  0246 0003                956              ANDI.W  #$0003,D6
0000141E  BC3C 0001                957              CMP.B   #$1,D6
00001422  6700 0020                958              BEQ     M_SIZE_END
00001426  BC3C 0002                959              CMP.B   #$2,D6
0000142A  6700 0014                960              BEQ     MOVE_SIZEL
0000142E  BC3C 0003                961              CMP.B   #$3,D6
00001432  6600 08CA                962              BNE     BAD_INSTANCE
00001436  0043 0040                963  MOVE_SIZEW   ORI.W   #$0040,D3
0000143A  4EF9 00001444            964              JMP     M_SIZE_END
00001440  0043 0080                965  MOVE_SIZEL   ORI.W   #$0080,D3
00001444  4E75                     966  M_SIZE_END    RTS 
00001446                           967  
00001446                           968  
00001446                           969  
00001446                           970  **movem,jsr,jmp,lea,rts 
00001446  3C07                     971  HEX_ONE_0100   MOVE.W  D7,D6
00001448  0246 0100                972              ANDI.W  #$0100,D6
0000144C  BC7C 0100                973              CMP.W   #$0100,D6
00001450  6700 0022                974              BEQ     OP_LEA
00001454  3C07                     975              MOVE.W  D7,D6
00001456  183C 0008                976              MOVE.B  #EIGHT_BITSHIFT,D4
0000145A  E86E                     977              LSR.W   D4,D6
0000145C  0246 000F                978              ANDI.W  #$000F,D6
00001460  CCFC 0006                979              MULU    #6,D6
00001464  4BF9 00001A60            980              LEA     JMP_TBL_0100,A5
0000146A  4EB5 6000                981              JSR     00(A5,D6)
0000146E  4EF9 000014A8            982              JMP     END_0100
00001474                           983              
00001474  14FC 004C                984  OP_LEA       MOVE.B  #'L',(A2)+
00001478  14FC 0045                985              MOVE.B  #'E',(A2)+
0000147C  14FC 0041                986              MOVE.B  #'A',(A2)+
00001480  14FC 0020                987              MOVE.B  #' ',(A2)+
00001484  14FC 0009                988              MOVE.B  #$09,(A2)+ 
00001488  4EB9 00001D92            989              JSR     GET_EA
0000148E  14FC 002C                990              MOVE.B  #',',(A2)+
00001492  14FC 0041                991              MOVE.B  #'A',(A2)+
00001496  3C07                     992              MOVE.W  D7,D6
00001498  183C 0009                993              MOVE.B  #9,D4
0000149C  E86E                     994              LSR.W   D4,D6
0000149E  0246 000F                995              ANDI.W  #$000F,D6
000014A2  0606 0030                996              ADD.B   #$30,D6
000014A6  14C6                     997              MOVE.B  D6,(A2)+
000014A8                           998              
000014A8                           999              
000014A8                          1000              
000014A8                          1001              
000014A8                          1002              
000014A8  4E75                    1003  END_0100     RTS
000014AA                          1004  
000014AA  4EB9 00001CFE           1005  HEX_ONE_0101   JSR     BAD_INSTANCE             * nad code
000014B0  4E75                    1006              RTS
000014B2                          1007              
000014B2                          1008              ***** MOVEM Command
000014B2  4EB9 00001CFE           1009  HEX_ONE_0110   JSR     BAD_INSTANCE
000014B8  5448                    1010              ADDQ.W  #2,A0
000014BA  4E75                    1011              RTS
000014BC                          1012  
000014BC  4EB9 00001CFE           1013  HEX_ONE_0111   JSR     BAD_INSTANCE             * bad code
000014C2  4E75                    1014              RTS
000014C4                          1015  
000014C4                          1016  
000014C4                          1017  **or
000014C4  3C07                    1018  HEX_ONE_1000   MOVE.W  D7,D6
000014C6  EC8E                    1019              LSR.L   #6,D6
000014C8  0246 0003               1020              ANDI.W  #$03,D6
000014CC  BC3C 0003               1021              CMP.B   #$3,D6 
000014D0  6600 0008               1022              BNE     OP_OR
000014D4  4EF9 00001CFE           1023              JMP     BAD_INSTANCE             
000014DA                          1024  
000014DA  14FC 004F               1025  OP_OR        MOVE.B  #'O',(A2)+
000014DE  14FC 0052               1026              MOVE.B  #'R',(A2)+
000014E2  14FC 002E               1027              MOVE.B  #'.',(A2)+            
000014E6  4EB9 00001BFE           1028              JSR     SIZE_TO_BUFF
000014EC  14FC 0020               1029              MOVE.B  #' ',(A2)+
000014F0  14FC 0020               1030              MOVE.B  #' ',(A2)+
000014F4  14FC 0020               1031              MOVE.B  #' ',(A2)+
000014F8  14FC 0020               1032              MOVE.B  #' ',(A2)+
000014FC  14FC 0020               1033              MOVE.B  #' ',(A2)+
00001500  4EB9 00001C46           1034              JSR     GET_DIR_BIT
00001506  BC3C 0000               1035              CMP.B   #%0,D6
0000150A  6600 001C               1036              BNE     OP_OR01
0000150E  4EB9 00001D92           1037              JSR     GET_EA
00001514  14FC 002C               1038              MOVE.B  #',',(A2)+
00001518  14FC 0044               1039              MOVE.B  #'D',(A2)+
0000151C  4EB9 00001C34           1040              JSR     H_REG_BITS
00001522                          1041              
00001522                          1042              
00001522  4EF9 0000153C           1043              JMP     END_1000
00001528                          1044              
00001528  14FC 0044               1045  OP_OR01      MOVE.B  #'D',(A2)+
0000152C  4EB9 00001C34           1046              JSR     H_REG_BITS
00001532  14FC 002C               1047              MOVE.B  #',',(A2)+
00001536  4EB9 00001D92           1048              JSR     GET_EA
0000153C                          1049  
0000153C  4E75                    1050  END_1000     RTS
0000153E                          1051  
0000153E                          1052  
0000153E                          1053  **sub
0000153E  14FC 0053               1054  HEX_ONE_1001   MOVE.B  #'S',(A2)+
00001542  14FC 0055               1055              MOVE.B  #'U',(A2)+
00001546  14FC 0042               1056              MOVE.B  #'B',(A2)+
0000154A  4EB9 00001BF4           1057              JSR     GET_SIZE
00001550  BC3C 0003               1058              CMP.B   #%11,D6
00001554  6600 0002               1059              BNE     OP_SUB
00001558                          1060              
00001558  14FC 002E               1061  OP_SUB       MOVE.B  #'.',(A2)+
0000155C  4EB9 00001BFE           1062              JSR     SIZE_TO_BUFF
00001562  14FC 0020               1063              MOVE.B  #' ',(A2)+
00001566  14FC 0020               1064              MOVE.B  #' ',(A2)+
0000156A  14FC 0020               1065              MOVE.B  #' ',(A2)+
0000156E  14FC 0020               1066              MOVE.B  #' ',(A2)+
00001572  4EB9 00001C46           1067              JSR     GET_DIR_BIT
00001578  BC3C 0000               1068              CMP.B   #%0,D6
0000157C  6600 001C               1069              BNE     OP_SUB01
00001580  4EB9 00001D92           1070              JSR     GET_EA
00001586  14FC 002C               1071              MOVE.B  #',',(A2)+
0000158A  14FC 0044               1072              MOVE.B  #'D',(A2)+
0000158E  4EB9 00001C34           1073              JSR     H_REG_BITS
00001594  4EF9 000015AE           1074              JMP     END_1001
0000159A                          1075              
0000159A  14FC 0044               1076  OP_SUB01     MOVE.B  #'D',(A2)+
0000159E  4EB9 00001C34           1077              JSR     H_REG_BITS
000015A4  14FC 002C               1078              MOVE.B  #',',(A2)+
000015A8  4EB9 00001D92           1079              JSR     GET_EA
000015AE                          1080              
000015AE  4E75                    1081  END_1001     RTS            
000015B0                          1082  
000015B0  4EB9 00001CFE           1083  HEX_ONE_1010   JSR     BAD_INSTANCE
000015B6  4E75                    1084              RTS
000015B8                          1085  
000015B8                          1086  
000015B8                          1087              
000015B8  3C07                    1088  OP_CMPE_OR    MOVE.W  D7,D6
000015BA  4EB9 00001C46           1089              JSR     GET_DIR_BIT
000015C0  BC3C 0000               1090              CMP.B   #%0,D6
000015C4  6600 0042               1091              BNE     OP_EOR           
000015C8                          1092                     
000015C8  14FC 0043               1093  OP_CMP       MOVE.B  #'C',(A2)+
000015CC  14FC 004D               1094              MOVE.B  #'M',(A2)+
000015D0  14FC 0050               1095              MOVE.B  #'P',(A2)+
000015D4  14FC 002E               1096              MOVE.B  #'.',(A2)+
000015D8  4EB9 00001BFE           1097              JSR     SIZE_TO_BUFF
000015DE  14FC 0020               1098              MOVE.B  #' ',(A2)+
000015E2  14FC 0020               1099              MOVE.B  #' ',(A2)+
000015E6  14FC 0020               1100              MOVE.B  #' ',(A2)+
000015EA  14FC 0020               1101              MOVE.B  #' ',(A2)+
000015EE  4EB9 00001D92           1102              JSR     GET_EA 
000015F4  14FC 002C               1103              MOVE.B  #',',(A2)+
000015F8  14FC 0044               1104              MOVE.B  #'D',(A2)+  
000015FC  4EB9 00001C34           1105              JSR     H_REG_BITS
00001602  4EF9 00001642           1106              JMP     END_1010
00001608                          1107        
00001608                          1108                          
00001608  14FC 0045               1109  OP_EOR       MOVE.B  #'E',(A2)+
0000160C  14FC 004F               1110              MOVE.B  #'O',(A2)+
00001610  14FC 0052               1111              MOVE.B  #'R',(A2)+
00001614  14FC 002E               1112              MOVE.B  #'.',(A2)+
00001618  4EB9 00001BFE           1113              JSR     SIZE_TO_BUFF
0000161E  14FC 0020               1114              MOVE.B  #' ',(A2)+
00001622  14FC 0020               1115              MOVE.B  #' ',(A2)+
00001626  14FC 0020               1116              MOVE.B  #' ',(A2)+
0000162A  14FC 0020               1117              MOVE.B  #' ',(A2)+
0000162E  14FC 0044               1118              MOVE.B  #'D',(A2)+  
00001632  4EB9 00001C34           1119              JSR     H_REG_BITS       
00001638  14FC 002C               1120              MOVE.B  #',',(A2)+
0000163C  4EB9 00001D92           1121              JSR     GET_EA
00001642                          1122                               
00001642  4E75                    1123  END_1010     RTS
00001644                          1124  
00001644  4EB9 00001BF4           1125  HEX_ONE_1011   JSR     GET_SIZE             * return size  in 6 & 7 into D6
0000164A  BC3C 0003               1126              CMP.B   #%11,D6             * determine if a CMPA
0000164E  6600 005A               1127              BNE     OP_CMP_ERROR
00001652  14FC 0043               1128              MOVE.B  #'C',(A2)+          * Put SUBA into Buff
00001656  14FC 004D               1129              MOVE.B  #'M',(A2)+
0000165A  14FC 0050               1130              MOVE.B  #'P',(A2)+
0000165E  14FC 0041               1131              MOVE.B  #'A',(A2)+
00001662  14FC 002E               1132              MOVE.B  #'.',(A2)+
00001666  3C07                    1133              MOVE.W  D7,D6               * fresh copy of instruction
00001668  E08E                    1134              LSR.L   #EIGHT_BITSHIFT,D6          * shift to right to isolate 8th bits
0000166A  0246 0001               1135              ANDI.W  #$0001,D6           * Isolate last bit for size
0000166E  BC3C 0001               1136              CMP.B   #%1,D6              * compare for a 1 to determine
00001672  6700 000C               1137              BEQ     CMPA_L               * jump to long, else word
00001676  14FC 0057               1138              MOVE.B  #'W',(A2)+          * add word size into buffer
0000167A  4EF9 00001684           1139              JMP     OP_CMPA              * Skip to adding padding and destination
00001680  14FC 004C               1140  CMPA_L      MOVE.B  #'L',(A2)+          * add long size into buffer           
00001684  14FC 0020               1141  OP_CMPA     MOVE.B  #' ',(A2)+
00001688  14FC 0020               1142              MOVE.B  #' ',(A2)+
0000168C  14FC 0020               1143              MOVE.B  #' ',(A2)+
00001690                          1144  
00001690  4EB9 00001D92           1145              JSR     GET_EA              * get source operand
00001696  14FC 002C               1146              MOVE.B  #',',(A2)+
0000169A  14FC 0041               1147              MOVE.B  #'A',(A2)+
0000169E  4EB9 00001C34           1148              JSR     H_REG_BITS         * Get address register number
000016A4  4EF9 00001734           1149              JMP     END_1011             * Skip to end of sub: hex1_1011
000016AA                          1150              
000016AA  3C07                    1151  OP_CMP_ERROR    MOVE.W  D7,D6               * fresh value
000016AC  4EB9 00001C46           1152              JSR     GET_DIR_BIT           * determine the direction bit 1 = eor 0 = cmp
000016B2  BC3C 0000               1153              CMP.B   #%0,D6              * yes, go into CMP
000016B6  6600 0042               1154              BNE     opEOR               * no, go into EOR            
000016BA                          1155                     
000016BA  14FC 0043               1156  opCMP       MOVE.B  #'C',(A2)+          * Populate CMP
000016BE  14FC 004D               1157              MOVE.B  #'M',(A2)+
000016C2  14FC 0050               1158              MOVE.B  #'P',(A2)+
000016C6  14FC 002E               1159              MOVE.B  #'.',(A2)+
000016CA  4EB9 00001BFE           1160              JSR     SIZE_TO_BUFF        * Determine & add size to buffer
000016D0  14FC 0020               1161              MOVE.B  #' ',(A2)+
000016D4  14FC 0020               1162              MOVE.B  #' ',(A2)+
000016D8  14FC 0020               1163              MOVE.B  #' ',(A2)+
000016DC  14FC 0020               1164              MOVE.B  #' ',(A2)+
000016E0  4EB9 00001D92           1165              JSR     GET_EA            * Source Operand
000016E6  14FC 002C               1166              MOVE.B  #',',(A2)+
000016EA  14FC 0044               1167              MOVE.B  #'D',(A2)+  
000016EE  4EB9 00001C34           1168              JSR     H_REG_BITS         * Add register number to buffer
000016F4  4EF9 00001734           1169              JMP     END_1011             * Skip to end of sub: hex1_1011
000016FA                          1170        
000016FA                          1171                          
000016FA  14FC 0045               1172  opEOR       MOVE.B  #'E',(A2)+          * Populate EOR
000016FE  14FC 004F               1173              MOVE.B  #'O',(A2)+
00001702  14FC 0052               1174              MOVE.B  #'R',(A2)+
00001706  14FC 002E               1175              MOVE.B  #'.',(A2)+
0000170A  4EB9 00001BFE           1176              JSR     SIZE_TO_BUFF         * Determine & add size to buffer
00001710  14FC 0020               1177              MOVE.B  #' ',(A2)+
00001714  14FC 0020               1178              MOVE.B  #' ',(A2)+
00001718  14FC 0020               1179              MOVE.B  #' ',(A2)+
0000171C  14FC 0020               1180              MOVE.B  #' ',(A2)+
00001720  14FC 0044               1181              MOVE.B  #'D',(A2)+  
00001724  4EB9 00001C34           1182              JSR     H_REG_BITS        * Add register number to buffer            
0000172A  14FC 002C               1183              MOVE.B  #',',(A2)+
0000172E  4EB9 00001D92           1184              JSR     GET_EA               * Destination Operand
00001734                          1185                               
00001734  4E75                    1186  END_1011     RTS
00001736                          1187  
00001736                          1188  
00001736                          1189  HEX_ONE_1100      
00001736                          1190  
00001736  5448                    1191  MOVE_PTR     ADDQ.W  #2,A0 **increments the pointer
00001738  4EF9 00001CFE           1192              JMP     BAD_INSTANCE
0000173E                          1193          
0000173E  3C07                    1194  OP_AND_EXG    MOVE.W  D7,D6
00001740  E68E                    1195              LSR.L   #3,D6
00001742  0206 001F               1196              ANDI.B  #$1F,D6
00001746  BC3C 0008               1197              CMP.B   #$08,D6
0000174A  6700 007A               1198              BEQ     OP_EXGD2D
0000174E  BC3C 0009               1199              CMP.B   #$09,D6
00001752  6700 00B0               1200              BEQ     OP_EXGA2A
00001756  BC3C 0011               1201              CMP.B   #$11,D6
0000175A  6700 00E6               1202              BEQ     OP_EXGD2A
0000175E                          1203              
0000175E                          1204              
0000175E  14FC 0041               1205  OP_AND       MOVE.B  #'A',(A2)+
00001762  14FC 004E               1206              MOVE.B  #'N',(A2)+
00001766  14FC 0044               1207              MOVE.B  #'D',(A2)+
0000176A  14FC 002E               1208              MOVE.B  #'.',(A2)+            
0000176E  4EB9 00001BFE           1209              JSR     SIZE_TO_BUFF
00001774  14FC 0020               1210              MOVE.B  #' ',(A2)+
00001778  14FC 0020               1211              MOVE.B  #' ',(A2)+
0000177C  14FC 0020               1212              MOVE.B  #' ',(A2)+
00001780  14FC 0020               1213              MOVE.B  #' ',(A2)+
00001784  4EB9 00001C46           1214              JSR     GET_DIR_BIT
0000178A  BC3C 0000               1215              CMP.B   #%0,D6 **is teh effective address first?
0000178E  6600 001C               1216              BNE     OP_AND01 **if no
00001792  4EB9 00001D92           1217              JSR     GET_EA    **else
00001798  14FC 002C               1218              MOVE.B  #',',(A2)+
0000179C  14FC 0044               1219              MOVE.B  #'D',(A2)+
000017A0  4EB9 00001C34           1220              JSR     H_REG_BITS
000017A6  4EF9 00001880           1221              JMP     END_1100
000017AC                          1222              
000017AC  14FC 0044               1223  OP_AND01     MOVE.B  #'D',(A2)+
000017B0  4EB9 00001C34           1224              JSR     H_REG_BITS
000017B6  14FC 002C               1225              MOVE.B  #',',(A2)+
000017BA  4EB9 00001D92           1226              JSR     GET_EA
000017C0  4EF9 00001880           1227              JMP     END_1100
000017C6                          1228  
000017C6  14FC 0045               1229  OP_EXGD2D    MOVE.B #'E',(A2)+
000017CA  14FC 0058               1230              MOVE.B #'X',(A2)+
000017CE  14FC 0047               1231              MOVE.B #'G',(A2)+
000017D2  14FC 0020               1232              MOVE.B #' ',(A2)+
000017D6  14FC 0020               1233              MOVE.B #' ',(A2)+
000017DA  14FC 0020               1234              MOVE.B #' ',(A2)+
000017DE  14FC 0020               1235              MOVE.B #' ',(A2)+
000017E2  14FC 0020               1236              MOVE.B #' ',(A2)+
000017E6  14FC 0020               1237              MOVE.B #' ',(A2)+
000017EA  14FC 0044               1238              MOVE.B #'D',(A2)+
000017EE  4EB9 00001C34           1239              JSR    H_REG_BITS
000017F4  14FC 002C               1240              MOVE.B #',',(A2)+
000017F8  4EB9 00001D92           1241              JSR    GET_EA
000017FE  4EF9 00001880           1242              JMP    END_1100
00001804                          1243                          
00001804  14FC 0045               1244  OP_EXGA2A    MOVE.B #'E',(A2)+
00001808  14FC 0058               1245              MOVE.B #'X',(A2)+           
0000180C  14FC 0047               1246              MOVE.B #'G',(A2)+
00001810  14FC 0020               1247              MOVE.B #' ',(A2)+
00001814  14FC 0020               1248              MOVE.B #' ',(A2)+
00001818  14FC 0020               1249              MOVE.B #' ',(A2)+
0000181C  14FC 0020               1250              MOVE.B #' ',(A2)+
00001820  14FC 0020               1251              MOVE.B #' ',(A2)+
00001824  14FC 0020               1252              MOVE.B #' ',(A2)+
00001828  14FC 0041               1253              MOVE.B #'A',(A2)+
0000182C  4EB9 00001C34           1254              JSR    H_REG_BITS
00001832  14FC 002C               1255              MOVE.B #',',(A2)+
00001836  4EB9 00001D92           1256              JSR    GET_EA
0000183C  4EF9 00001880           1257              JMP    END_1100
00001842                          1258              
00001842  14FC 0045               1259  OP_EXGD2A    MOVE.B #'E',(A2)+
00001846  14FC 0058               1260              MOVE.B #'X',(A2)+           
0000184A  14FC 0047               1261              MOVE.B #'G',(A2)+
0000184E  14FC 0020               1262              MOVE.B #' ',(A2)+
00001852  14FC 0020               1263              MOVE.B #' ',(A2)+
00001856  14FC 0020               1264              MOVE.B #' ',(A2)+
0000185A  14FC 0020               1265              MOVE.B #' ',(A2)+
0000185E  14FC 0020               1266              MOVE.B #' ',(A2)+
00001862  14FC 0020               1267              MOVE.B #' ',(A2)+
00001866  14FC 0044               1268              MOVE.B #'D',(A2)+
0000186A  4EB9 00001C34           1269              JSR    H_REG_BITS
00001870  14FC 002C               1270              MOVE.B #',',(A2)+
00001874  4EB9 00001D92           1271              JSR    GET_EA
0000187A  4EF9 00001880           1272              JMP    END_1100
00001880                          1273  
00001880  4E75                    1274  END_1100     RTS
00001882                          1275  
00001882                          1276  **add
00001882  14FC 0041               1277  HEX_ONE_1101   MOVE.B  #'A',(A2)+
00001886  14FC 0044               1278              MOVE.B  #'D',(A2)+
0000188A  14FC 0044               1279              MOVE.B  #'D',(A2)+
0000188E  4EB9 00001BF4           1280              JSR     GET_SIZE
00001894  6000 0002               1281              BRA     opADD
00001898                          1282             
00001898                          1283              
00001898  14FC 002E               1284  opADD       MOVE.B  #'.',(A2)+
0000189C  4EB9 00001BFE           1285              JSR     SIZE_TO_BUFF
000018A2  14FC 0020               1286              MOVE.B  #' ',(A2)+
000018A6  14FC 0020               1287              MOVE.B  #' ',(A2)+
000018AA  14FC 0020               1288              MOVE.B  #' ',(A2)+
000018AE  14FC 0020               1289              MOVE.B  #' ',(A2)+
000018B2  4EB9 00001C46           1290              JSR     GET_DIR_BIT
000018B8  BC3C 0000               1291              CMP.B   #%0,D6 **is the effective address first?
000018BC  6600 001C               1292              BNE     opADD01 **if no
000018C0  4EB9 00001D92           1293              JSR     GET_EA  **else
000018C6  14FC 002C               1294              MOVE.B  #',',(A2)+
000018CA  14FC 0044               1295              MOVE.B  #'D',(A2)+
000018CE  4EB9 00001C34           1296              JSR     H_REG_BITS
000018D4  4EF9 000018EE           1297              JMP     end1101
000018DA                          1298              
000018DA  14FC 0044               1299  opADD01     MOVE.B  #'D',(A2)+
000018DE  4EB9 00001C34           1300              JSR     H_REG_BITS
000018E4  14FC 002C               1301              MOVE.B  #',',(A2)+
000018E8  4EB9 00001D92           1302              JSR     GET_EA
000018EE                          1303  
000018EE  4E75                    1304  end1101     RTS
000018F0                          1305  
000018F0                          1306  
000018F0                          1307  
000018F0                          1308  **ASD,LSD
000018F0  4EB9 00001BF4           1309  HEX_ONE_1110   JSR     GET_SIZE
000018F6  BC3C 0003               1310              CMP.B   #%11,D6
000018FA  6700 0086               1311              BEQ     OP_SHIFT_MEM
000018FE  3C07                    1312  OP_SHIFT    MOVE.W  D7,D6
00001900  E60E                    1313              LSR.B   #3,D6
00001902  0206 0003               1314              ANDI.B  #$03,D6 **masking bits
00001906  BC3C 0000               1315              CMP.B   #%00,D6 **is asd?
0000190A  6700 000E               1316              BEQ     OP_SHIFT_ASD  **if
0000190E  BC3C 0001               1317              CMP.B   #%01,D6 else is lsd?
00001912  6700 003A               1318              BEQ     OP_SHIFT_LSD  **if
00001916  6000 03E6               1319              BRA     BAD_INSTANCE **else
0000191A                          1320  
0000191A                          1321      
0000191A  14FC 0041               1322  OP_SHIFT_ASD       MOVE.B  #'A',(A2)+
0000191E  14FC 0053               1323              MOVE.B  #'S',(A2)+          
00001922  4EB9 00001A00           1324              JSR     D_2_BUFF
00001928  14FC 002E               1325              MOVE.B  #'.',(A2)+
0000192C  4EB9 00001BFE           1326              JSR     SIZE_TO_BUFF
00001932  14FC 0020               1327              MOVE.B  #' ',(A2)+
00001936  14FC 0020               1328              MOVE.B  #' ',(A2)+
0000193A  14FC 0020               1329              MOVE.B  #' ',(A2)+
0000193E  14FC 0020               1330              MOVE.B  #' ',(A2)+
00001942  4EB9 00001A1E           1331              JSR     GET_IR
00001948  4EF9 000019FE           1332              JMP     END_1110     
0000194E                          1333  
0000194E  14FC 004C               1334  OP_SHIFT_LSD       MOVE.B  #'L',(A2)+
00001952  14FC 0053               1335              MOVE.B  #'S',(A2)+          
00001956  4EB9 00001A00           1336              JSR     D_2_BUFF
0000195C  14FC 002E               1337              MOVE.B  #'.',(A2)+
00001960  4EB9 00001BFE           1338              JSR     SIZE_TO_BUFF
00001966  14FC 0020               1339              MOVE.B  #' ',(A2)+
0000196A  14FC 0020               1340              MOVE.B  #' ',(A2)+
0000196E  14FC 0020               1341              MOVE.B  #' ',(A2)+
00001972  14FC 0020               1342              MOVE.B  #' ',(A2)+
00001976  4EB9 00001A1E           1343              JSR     GET_IR
0000197C  4EF9 000019FE           1344              JMP     END_1110     
00001982                          1345  
00001982                          1346  
00001982  3C07                    1347  OP_SHIFT_MEM    MOVE.W  D7,D6 **memory shift
00001984  E08E                    1348              LSR.L   #EIGHT_BITSHIFT,D6
00001986  E28E                    1349              LSR.L   #1,D6
00001988  0246 0007               1350              ANDI.W  #$0007,D6 **mask bits other than 9-11
0000198C  BC3C 0000               1351              CMP.B   #%00,D6 **is as function?
00001990  6700 000E               1352              BEQ     OP_ASM **if
00001994  BC3C 0001               1353              CMP.B   #%01,D6 **else is ls?
00001998  6700 0038               1354              BEQ     OP_LSM  **if
0000199C  6000 0360               1355              BRA     BAD_INSTANCE **else
000019A0                          1356              
000019A0                          1357  
000019A0                          1358              
000019A0  14FC 0041               1359  OP_ASM       MOVE.B  #'A',(A2)+
000019A4  14FC 0053               1360              MOVE.B  #'S',(A2)+          
000019A8  4EB9 00001A00           1361              JSR     D_2_BUFF
000019AE  14FC 002E               1362              MOVE.B  #'.',(A2)+
000019B2  14FC 0057               1363              MOVE.B  #'W',(A2)+
000019B6  14FC 0020               1364              MOVE.B  #' ',(A2)+
000019BA  14FC 0020               1365              MOVE.B  #' ',(A2)+
000019BE  14FC 0020               1366              MOVE.B  #' ',(A2)+
000019C2  14FC 0020               1367              MOVE.B  #' ',(A2)+
000019C6  4EB9 00001D92           1368              JSR     GET_EA
000019CC  4EF9 000019FE           1369              JMP     END_1110
000019D2                          1370  
000019D2  14FC 004C               1371  OP_LSM       MOVE.B  #'L',(A2)+
000019D6  14FC 0053               1372              MOVE.B  #'S',(A2)+          
000019DA  4EB9 00001A00           1373              JSR     D_2_BUFF
000019E0  14FC 002E               1374              MOVE.B  #'.',(A2)+
000019E4  14FC 0057               1375              MOVE.B  #'W',(A2)+
000019E8  14FC 0020               1376              MOVE.B  #' ',(A2)+
000019EC  14FC 0020               1377              MOVE.B  #' ',(A2)+
000019F0  14FC 0020               1378              MOVE.B  #' ',(A2)+
000019F4  14FC 0020               1379              MOVE.B  #' ',(A2)+
000019F8  4EB9 00001D92           1380              JSR     GET_EA    
000019FE  4E75                    1381  END_1110     RTS
00001A00                          1382  
00001A00  4EB9 00001C46           1383  D_2_BUFF    JSR     GET_DIR_BIT *get dir
00001A06  BC3C 0000               1384              CMP.B   #%0,D6 **is the direction right?
00001A0A  6700 000C               1385              BEQ     DIR_R   **if
00001A0E  14FC 004C               1386  DIR_L        MOVE.B  #'L',(A2)+ **else
00001A12  4EF9 00001A1C           1387              JMP     DIR_END 
00001A18  14FC 0052               1388  DIR_R        MOVE.B  #'R',(A2)+
00001A1C  4E75                    1389  DIR_END      RTS
00001A1E                          1390    
00001A1E                          1391  
00001A1E  3C07                    1392  GET_IR       MOVE.W  D7,D6
00001A20  EA8E                    1393              LSR.L   #5,D6
00001A22  0246 0001               1394              ANDI.W  #$0001,D6
00001A26  BC3C 0000               1395              CMP.B   #%0,D6
00001A2A  6700 000C               1396              BEQ     IR_CNT
00001A2E  14FC 0044               1397              MOVE.B  #'D',(A2)+
00001A32  4EF9 00001A3C           1398              JMP     IR_SZ
00001A38  14FC 0023               1399  IR_CNT       MOVE.B  #'#',(A2)+
00001A3C  4EB9 00001C34           1400  IR_SZ        JSR     H_REG_BITS
00001A42  14FC 002C               1401              MOVE.B  #',',(A2)+
00001A46  14FC 0044               1402              MOVE.B  #'D',(A2)+
00001A4A  3C07                    1403              MOVE.W  D7,D6
00001A4C  0246 0007               1404              ANDI.W  #$0007,D6
00001A50  0606 0030               1405              ADD.B   #$30,D6
00001A54  14C6                    1406              MOVE.B  D6,(A2)+
00001A56  4E75                    1407  END_IR       RTS
00001A58                          1408              
00001A58  4EB9 00001CFE           1409  HEX_ONE_1111   JSR     BAD_INSTANCE **bad code
00001A5E  4E75                    1410              RTS
00001A60                          1411  
00001A60                          1412  JMP_TBL_0100   
00001A60  4EF9 00001AC0           1413              JMP     HEX_FOUR_0000            
00001A66  4EF9 00001AC8           1414              JMP     HEX_FOUR_0001            
00001A6C  4EF9 00001AD0           1415              JMP     HEX_FOUR_0010
00001A72  4EF9 00001AD0           1416              JMP     HEX_FOUR_0011
00001A78  4EF9 00001AD8           1417              JMP     HEX_FOUR_0100
00001A7E  4EF9 00001B06           1418              JMP     HEX_FOUR_0101
00001A84  4EF9 00001B0E           1419              JMP     HEX_FOUR_0110
00001A8A  4EF9 00001B3C           1420              JMP     HEX_FOUR_0111
00001A90  4EF9 00001B44           1421              JMP     HEX_FOUR_1000
00001A96  4EF9 00001B5A           1422              JMP     HEX_FOUR_1001
00001A9C  4EF9 00001B62           1423              JMP     HEX_FOUR_1010
00001AA2  4EF9 00001B6A           1424              JMP     HEX_FOUR_1011
00001AA8  4EF9 00001B72           1425              JMP     HEX_FOUR_1100
00001AAE  4EF9 00001B7A           1426              JMP     HEX_FOUR_1101
00001AB4  4EF9 00001B8A           1427              JMP     HEX_FOUR_1110
00001ABA  4EF9 00001B82           1428              JMP     HEX_FOUR_1111
00001AC0                          1429              
00001AC0  4EB9 00001CFE           1430  HEX_FOUR_0000   JSR     BAD_INSTANCE
00001AC6  4E75                    1431              RTS
00001AC8                          1432              
00001AC8  4EB9 00001CFE           1433  HEX_FOUR_0001   JSR     BAD_INSTANCE
00001ACE  4E75                    1434              RTS
00001AD0                          1435              
00001AD0                          1436  HEX_FOUR_0010 
00001AD0                          1437              
00001AD0  4EB9 00001CFE           1438  HEX_FOUR_0011   JSR     BAD_INSTANCE
00001AD6  4E75                    1439              RTS
00001AD8                          1440                            
00001AD8  14FC 004E               1441  HEX_FOUR_0100   MOVE.B  #'N',(A2)+
00001ADC  14FC 0045               1442              MOVE.B  #'E',(A2)+
00001AE0  14FC 0047               1443              MOVE.B  #'G',(A2)+
00001AE4  14FC 002E               1444              MOVE.B  #'.',(A2)+
00001AE8  4EB9 00001BFE           1445              JSR     SIZE_TO_BUFF
00001AEE  14FC 0020               1446              MOVE.B  #' ',(A2)+
00001AF2  14FC 0020               1447              MOVE.B  #' ',(A2)+
00001AF6  14FC 0020               1448              MOVE.B  #' ',(A2)+
00001AFA  14FC 0020               1449              MOVE.B  #' ',(A2)+         
00001AFE  4EB9 00001D92           1450              JSR     GET_EA       
00001B04  4E75                    1451              RTS
00001B06                          1452              
00001B06  4EB9 00001CFE           1453  HEX_FOUR_0101   JSR     BAD_INSTANCE
00001B0C  4E75                    1454              RTS
00001B0E                          1455              
00001B0E  14FC 004E               1456  HEX_FOUR_0110   MOVE.B  #'N',(A2)+
00001B12  14FC 004F               1457              MOVE.B  #'O',(A2)+
00001B16  14FC 0054               1458              MOVE.B  #'T',(A2)+
00001B1A  14FC 002E               1459              MOVE.B  #'.',(A2)+
00001B1E  4EB9 00001BFE           1460              JSR     SIZE_TO_BUFF
00001B24  14FC 0020               1461              MOVE.B  #' ',(A2)+
00001B28  14FC 0020               1462              MOVE.B  #' ',(A2)+
00001B2C  14FC 0020               1463              MOVE.B  #' ',(A2)+
00001B30  14FC 0020               1464              MOVE.B  #' ',(A2)+         
00001B34  4EB9 00001D92           1465              JSR     GET_EA       
00001B3A  4E75                    1466              RTS
00001B3C                          1467              
00001B3C  4EB9 00001CFE           1468  HEX_FOUR_0111   JSR     BAD_INSTANCE
00001B42  4E75                    1469              RTS
00001B44                          1470              
00001B44                          1471  **MOVEM
00001B44  3C07                    1472  HEX_FOUR_1000   MOVE.W  D7,D6
00001B46  E88E                    1473              LSR.L   #FOUR_BITSHIFT,D6
00001B48  0246 000F               1474              ANDI.W  #$000F,D6
00001B4C  6000 0004               1475              BRA     OP_MOVEM
00001B50                          1476  
00001B50                          1477  
00001B50  4E75                    1478              RTS            
00001B52                          1479  
00001B52  4EB9 00001CFE           1480  OP_MOVEM     JSR     BAD_INSTANCE
00001B58  4E75                    1481              RTS   
00001B5A                          1482  
00001B5A  4EB9 00001CFE           1483  HEX_FOUR_1001   JSR     BAD_INSTANCE
00001B60  4E75                    1484              RTS   
00001B62  4EB9 00001CFE           1485  HEX_FOUR_1010   JSR     BAD_INSTANCE
00001B68  4E75                    1486              RTS   
00001B6A  4EB9 00001CFE           1487  HEX_FOUR_1011   JSR     BAD_INSTANCE
00001B70  4E75                    1488              RTS
00001B72  4EB9 00001CFE           1489  HEX_FOUR_1100   JSR     BAD_INSTANCE
00001B78  4E75                    1490              RTS
00001B7A  4EB9 00001CFE           1491  HEX_FOUR_1101   JSR     BAD_INSTANCE
00001B80  4E75                    1492              RTS
00001B82  4EB9 00001CFE           1493  HEX_FOUR_1111   JSR     BAD_INSTANCE
00001B88  4E75                    1494              RTS   
00001B8A                          1495  
00001B8A                          1496  
00001B8A                          1497  **JSR,JMP,RTS
00001B8A  4EB9 00001BF4           1498  HEX_FOUR_1110   JSR     GET_SIZE
00001B90  BC3C 0002               1499              CMP.B   #%10,D6
00001B94  6700 0016               1500              BEQ     OP_JSR
00001B98  BC3C 0003               1501              CMP.B   #%11,D6
00001B9C  6700 002A               1502              BEQ     OP_JMP
00001BA0  BE7C 4E75               1503              CMP.W   #$4E75,D7 **is rts?
00001BA4  6700 003E               1504              BEQ     OP_RTS **if          
00001BA8  6000 0154               1505              BRA     BAD_INSTANCE **else
00001BAC                          1506               
00001BAC                          1507  
00001BAC                          1508                                        
00001BAC  14FC 004A               1509  OP_JSR       MOVE.B  #'J',(A2)+
00001BB0  14FC 0053               1510              MOVE.B  #'S',(A2)+
00001BB4  14FC 0052               1511              MOVE.B  #'R',(A2)+
00001BB8  14FC 0020               1512              MOVE.B  #' ',(A2)+
00001BBC  14FC 0009               1513              MOVE.B  #$09,(A2)+ 
00001BC0  4EF9 00001D92           1514              JMP     GET_EA           
00001BC6                          1515  
00001BC6  4E75                    1516              RTS
00001BC8                          1517                         
00001BC8  14FC 004A               1518  OP_JMP       MOVE.B  #'J',(A2)+
00001BCC  14FC 004D               1519              MOVE.B  #'M',(A2)+
00001BD0  14FC 0050               1520              MOVE.B  #'P',(A2)+
00001BD4  14FC 0020               1521              MOVE.B  #' ',(A2)+
00001BD8  14FC 0009               1522              MOVE.B  #$09,(A2)+ 
00001BDC  4EB9 00001D92           1523              JSR     GET_EA          
00001BE2  4E75                    1524              RTS
00001BE4                          1525                                   
00001BE4  14FC 0052               1526  OP_RTS       MOVE.B  #'R',(A2)+
00001BE8  14FC 0054               1527              MOVE.B  #'T',(A2)+
00001BEC  14FC 0053               1528              MOVE.B  #'S',(A2)+             
00001BF0  4E75                    1529              RTS
00001BF2                          1530              
00001BF2  4E75                    1531  HEX_TWO_1111   RTS    
00001BF4                          1532  
00001BF4                          1533  **helper functions
00001BF4  3C07                    1534  GET_SIZE     MOVE.W  D7,D6 **thuis gets the size
00001BF6  EC4E                    1535              LSR.W   #6,D6 
00001BF8  0246 0003               1536              ANDI.W  #$0003,D6  
00001BFC  4E75                    1537              RTS **stores and returns
00001BFE                          1538  
00001BFE  4EB8 1BF4               1539  SIZE_TO_BUFF JSR     GET_SIZE
00001C02  BC3C 0000               1540              CMP.B   #%00,D6
00001C06  6700 001C               1541              BEQ     main_BYTE
00001C0A  BC3C 0001               1542              CMP.B   #%01,D6
00001C0E  6700 001E               1543              BEQ     main_WORD
00001C12  BC3C 0002               1544              CMP.B   #%10,D6
00001C16  6600 00E6               1545              BNE     BAD_INSTANCE
00001C1A                          1546        
00001C1A  14FC 004C               1547              MOVE.B  #'L',(A2)+
00001C1E  4EF9 00001C32           1548              JMP     main_END
00001C24                          1549              
00001C24  14FC 0042               1550  main_BYTE       MOVE.B  #'B',(A2)+
00001C28  4EF9 00001C32           1551              JMP     main_END
00001C2E                          1552              
00001C2E  14FC 0057               1553  main_WORD       MOVE.B  #'W',(A2)+
00001C32                          1554  
00001C32  4E75                    1555  main_END     RTS
00001C34                          1556  
00001C34  3C07                    1557  H_REG_BITS MOVE.W  D7,D6
00001C36  E08E                    1558              LSR.L   #EIGHT_BITSHIFT,D6
00001C38  E28E                    1559              LSR.L   #1,D6
00001C3A  0206 0007               1560              ANDI.B  #$7,D6
00001C3E  0606 0030               1561              ADD.B   #$30,D6
00001C42  14C6                    1562              MOVE.B  D6,(A2)+
00001C44  4E75                    1563              RTS
00001C46                          1564  
00001C46  3C07                    1565  GET_DIR_BIT   MOVE.W  D7,D6
00001C48  E08E                    1566              LSR.L   #EIGHT_BITSHIFT,D6
00001C4A  0206 0001               1567              ANDI.B  #01,D6
00001C4E  4E75                    1568              RTS  
00001C50                          1569              
00001C50  BC3C 0000               1570  GET_ADDR     CMP.B   #%00,D6
00001C54  6700 0286               1571              BEQ     B_TO_BUFF
00001C58  BC3C 0001               1572              CMP.B   #%01,D6
00001C5C  6700 02AC               1573              BEQ     W_2_BUFF
00001C60  BC3C 0002               1574              CMP.B   #%10,D6
00001C64  6700 02D2               1575              BEQ     L_TO_BUFF
00001C68  4E75                    1576              RTS
00001C6A                          1577  
00001C6A  4EB9 00001CC8           1578  GET_LONG     JSR     CMD_S_1 **loading shift value
00001C70  183C 000C               1579              MOVE.B  #TWELVE_BITSHIFT,D4
00001C74  4EB9 00001CD0           1580              JSR     CMD_S_2
00001C7A  183C 0008               1581              MOVE.B  #EIGHT_BITSHIFT,D4
00001C7E  4EB9 00001CD0           1582              JSR     CMD_S_2
00001C84  183C 0004               1583              MOVE.B  #FOUR_BITSHIFT,D4
00001C88  4EB9 00001CD0           1584              JSR     CMD_S_2
00001C8E  183C 0000               1585              MOVE.B  #0,D4
00001C92  4EB9 00001CEA           1586              JSR     CMD_S_4
00001C98  183C 000C               1587              MOVE.B  #TWELVE_BITSHIFT,D4
00001C9C  4EB9 00001CEA           1588              JSR     CMD_S_4
00001CA2  183C 0008               1589              MOVE.B  #EIGHT_BITSHIFT,D4
00001CA6  4EB9 00001CEA           1590              JSR     CMD_S_4
00001CAC  183C 0004               1591              MOVE.B  #FOUR_BITSHIFT,D4
00001CB0  4EB9 00001CEA           1592              JSR     CMD_S_4
00001CB6  183C 0000               1593              MOVE.B  #0,D4
00001CBA  E8AE                    1594              LSR.L   D4,D6
00001CBC  0286 0000000F           1595              ANDI.L  #$0000000F,D6
00001CC2  4EB9 00001D7A           1596              JSR     HEX_TO_ASCII
00001CC8                          1597  
00001CC8  7C00                    1598  CMD_S_1      MOVEQ   #$0,D6
00001CCA  2C08                    1599              MOVE.L  A0,D6
00001CCC  4846                    1600              SWAP    D6
00001CCE  4E75                    1601              RTS
00001CD0                          1602  
00001CD0  E8AE                    1603  CMD_S_2      LSR.L   D4,D6
00001CD2  0286 0000000F           1604              ANDI.L  #$0000000F,D6
00001CD8  4EB9 00001D7A           1605              JSR     HEX_TO_ASCII
00001CDE  4EB8 1CC8               1606              JSR     CMD_S_1
00001CE2  4E75                    1607              RTS
00001CE4                          1608  
00001CE4  7C00                    1609  CMD_S_3      MOVEQ   #$0,D6
00001CE6  2C08                    1610              MOVE.L  A0,D6
00001CE8  4E75                    1611              RTS
00001CEA                          1612              
00001CEA  E8AE                    1613  CMD_S_4      LSR.L   D4,D6
00001CEC  0286 0000000F           1614              ANDI.L  #$0000000F,D6
00001CF2  4EB9 00001D7A           1615              JSR     HEX_TO_ASCII
00001CF8  4EB8 1CE4               1616              JSR     CMD_S_3
00001CFC  4E75                    1617              RTS
00001CFE                          1618              
00001CFE  1A3C 0000               1619  BAD_INSTANCE     MOVE.B  #FLAG_BAD,D5 **trigering bad flag
00001D02  244B                    1620              MOVEA.L A3,A2
00001D04  14FC 0044               1621              MOVE.B  #'D',(A2)+ 
00001D08  14FC 0041               1622              MOVE.B  #'A',(A2)+
00001D0C  14FC 0054               1623              MOVE.B  #'T',(A2)+
00001D10  14FC 0041               1624              MOVE.B  #'A',(A2)+
00001D14  14FC 0009               1625              MOVE.B  #$09,(A2)+
00001D18  14FC 0024               1626              MOVE.B  #'$',(A2)+ *i am very tired at this point
00001D1C  4EB9 00001D24           1627              JSR     GET_BAD_W
00001D22  4E75                    1628              RTS          
00001D24                          1629  
00001D24  7C00                    1630  GET_BAD_W  MOVEQ   #$0,D6
00001D26  3C07                    1631              MOVE.W  D7,D6
00001D28  183C 000C               1632              MOVE.B  #TWELVE_BITSHIFT,D4
00001D2C  E8AE                    1633              LSR.L   D4,D6
00001D2E  0246 000F               1634              ANDI.W  #$000F,D6
00001D32  4EB9 00001D7A           1635              JSR     HEX_TO_ASCII
00001D38  3C07                    1636              MOVE.W  D7,D6
00001D3A  183C 0008               1637              MOVE.B  #EIGHT_BITSHIFT,D4
00001D3E  E8AE                    1638              LSR.L   D4,D6
00001D40  0246 000F               1639              ANDI.W  #$000F,D6
00001D44  4EB9 00001D7A           1640              JSR     HEX_TO_ASCII
00001D4A  3C07                    1641              MOVE.W  D7,D6
00001D4C  183C 0004               1642              MOVE.B  #FOUR_BITSHIFT,D4
00001D50  E8AE                    1643              LSR.L   D4,D6
00001D52  0246 000F               1644              ANDI.W  #$000F,D6
00001D56  4EB9 00001D7A           1645              JSR     HEX_TO_ASCII
00001D5C  3C07                    1646              MOVE.W  D7,D6
00001D5E  0246 000F               1647              ANDI.W  #$000F,D6
00001D62  4EB9 00001D7A           1648              JSR     HEX_TO_ASCII **will this ever end?
00001D68  4E75                    1649              RTS
00001D6A                          1650              
00001D6A  4280                    1651  CLEAR_REGISTERS     CLR.L   D0
00001D6C  4281                    1652              CLR.L   D1
00001D6E  4282                    1653              CLR.L   D2
00001D70  4283                    1654              CLR.L   D3
00001D72  4284                    1655              CLR.L   D4
00001D74  4286                    1656              CLR.L   D6
00001D76  4287                    1657              CLR.L   D7
00001D78  4E75                    1658              RTS
00001D7A                          1659  
00001D7A                          1660  
00001D7A                          1661  **convert hex to ascii
00001D7A  BC3C 000A               1662  HEX_TO_ASCII   CMP.B   #$A,D6
00001D7E  6C00 000A               1663              BGE     letter
00001D82  0606 0030               1664              ADDI.B  #$30,D6 
00001D86  6000 0006               1665              BRA     WRITE_TO_BUFFER **my hands hurt so much from typing
00001D8A  0606 0037               1666  letter      ADDI.B  #$37,D6
00001D8E  14C6                    1667  WRITE_TO_BUFFER  MOVE.B  D6,(A2)+
00001D90  4E75                    1668              RTS
00001D92                          1669  **get the effective address
00001D92                          1670  GET_EA       
00001D92  4BF9 00001DBC           1671              LEA     EA_M_TBL,A5 **get effective address
00001D98  4282                    1672              CLR.L   D2
00001D9A  4283                    1673              CLR.L   D3
00001D9C  4284                    1674              CLR.L   D4           
00001D9E  4286                    1675              CLR.L   D6
00001DA0  3C07                    1676              MOVE.W  D7,D6
00001DA2  0246 003F               1677              ANDI.W  #$003F,D6
00001DA6  123C 0003               1678              MOVE.B      #3,D1       
00001DAA  E26E                    1679              LSR.W       D1,D6       
00001DAC                          1680  
00001DAC  CCFC 0006               1681              MULU      #6,D6
00001DB0  4EB5 6000               1682              JSR         00(A5,D6)
00001DB4                          1683  
00001DB4  4E75                    1684              RTS 
00001DB6                          1685          
00001DB6  4EF9 00004144           1686              JMP         END 
00001DBC                          1687  EA_M_TBL 
00001DBC  4EF9 00001DEC           1688              JMP     EA_000
00001DC2  4EF9 00001DFE           1689              JMP     EA_001
00001DC8  4EF9 00001E10           1690              JMP     EA_010
00001DCE  4EF9 00001E2A           1691              JMP     EA_011
00001DD4  4EF9 00001E48           1692              JMP     EA_100
00001DDA  4EF9 00001E66           1693              JMP     EA_101
00001DE0  4EF9 00001E6A           1694              JMP     EA_110
00001DE6  4EF9 00001E6E           1695              JMP     EA_111
00001DEC                          1696  EA_000
00001DEC  3C07                    1697              MOVE.W      D7,D6 **store word
00001DEE  0246 0007               1698              ANDI.W      #$7,D6 **mask bits
00001DF2  14FC 0044               1699              MOVE.B      #$44,(A2)+ 
00001DF6  0606 0030               1700              ADD.B       #$30,D6 **reg to hex
00001DFA  14C6                    1701              MOVE.B      D6,(A2)+            
00001DFC                          1702              
00001DFC  4E75                    1703          RTS 
00001DFE                          1704  EA_001
00001DFE  3C07                    1705              MOVE.W      D7,D6  **store word
00001E00  0246 0007               1706              ANDI.W      #$7,D6 **mask bits
00001E04  14FC 0041               1707              MOVE.B      #$41,(A2)+ 
00001E08  0606 0030               1708              ADD.B       #$30,D6 
00001E0C  14C6                    1709              MOVE.B      D6,(A2)+
00001E0E                          1710                
00001E0E  4E75                    1711          RTS **i have to write RTS on mail that comes all the time, the last tennents in my apartment didn't change their address
00001E10                          1712  EA_010
00001E10  3C07                    1713              MOVE.W      D7,D6 **same same, store word
00001E12  0246 0007               1714              ANDI.W      #$7,D6 
00001E16  14FC 0028               1715              MOVE.B      #$28,(A2)+ **same same but different    
00001E1A  14FC 0041               1716              MOVE.B      #$41,(A2)+
00001E1E  0606 0030               1717              ADD.B       #$30,D6
00001E22  14C6                    1718              MOVE.B      D6,(A2)+
00001E24  14FC 0029               1719              MOVE.B      #$29,(A2)+
00001E28                          1720               
00001E28  4E75                    1721          RTS **recipient no longer at address, return to sender
00001E2A                          1722  EA_011
00001E2A                          1723              
00001E2A  3C07                    1724              MOVE.W      D7,D6 **store words again
00001E2C  0246 0007               1725              ANDI.W      #$7,D6 
00001E30  14FC 0028               1726              MOVE.B      #$28,(A2)+ **add open parenthesis        
00001E34  14FC 0041               1727              MOVE.B      #$41,(A2)+ **add A
00001E38  0606 0030               1728              ADD.B       #$30,D6 **convert reg to hex
00001E3C  14C6                    1729              MOVE.B      D6,(A2)+
00001E3E  14FC 0029               1730              MOVE.B      #$29,(A2)+ **add close parenthesis
00001E42  14FC 002B               1731              MOVE.B      #$2B,(A2)+ **add plus to end
00001E46                          1732                   
00001E46  4E75                    1733          RTS
00001E48                          1734  EA_100
00001E48                          1735             
00001E48  3C07                    1736              MOVE.W      D7,D6 **stoer word
00001E4A  0246 0007               1737              ANDI.W      #$7,D6  **mask bits
00001E4E  14FC 002D               1738              MOVE.B      #$2D,(A2)+ **add minus
00001E52  14FC 0028               1739              MOVE.B      #$28,(A2)+  **add open renthesis          
00001E56  14FC 0041               1740              MOVE.B      #$41,(A2)+   **add A
00001E5A  0606 0030               1741              ADD.B       #$30,D6 **reg to hex
00001E5E  14C6                    1742              MOVE.B      D6,(A2)+  
00001E60  14FC 0029               1743              MOVE.B      #$29,(A2)+ **add close parenthesis
00001E64                          1744              
00001E64  4E75                    1745          RTS
00001E66                          1746  
00001E66                          1747  EA_101
00001E66  4EF8 1CFE               1748               JMP    BAD_INSTANCE **bad bad nasty bad flag
00001E6A                          1749  
00001E6A                          1750  EA_110
00001E6A  4EF8 1CFE               1751              JMP       BAD_INSTANCE  **bad bad again again
00001E6E                          1752  
00001E6E                          1753  
00001E6E                          1754  
00001E6E                          1755  EA_111
00001E6E  4EB9 00001E9A           1756              JSR      REG_BITS  
00001E74  0C06 0000               1757              CMPI.B   #$0,D6  **is this a word???!?!?!
00001E78  6700 0090               1758              BEQ      W_2_BUFF **YASSSSSSS
00001E7C  0C06 0001               1759              CMPI.B   #$1,D6 **NAH
00001E80  6700 00B6               1760              BEQ      L_TO_BUFF **load it
00001E84  0C06 0002               1761              CMPI.B   #$2,D6
00001E88                          1762  
00001E88  0C06 0002               1763              CMPI.B   #$2,D6
00001E8C  6700 0036               1764              BEQ      PC_W_DISP             
00001E90  0C06 0004               1765              CMPI.B   #$4,D6
00001E94  6700 000C               1766              BEQ      I_TO_BUFF          * DON"T HAVE THIS CASE YET
00001E98                          1767             
00001E98  4E75                    1768              RTS
00001E9A                          1769  
00001E9A  3C07                    1770  REG_BITS     MOVE.W  D7,D6
00001E9C  0246 0007               1771              ANDI.W  #$07,D6
00001EA0  4E75                    1772              RTS
00001EA2                          1773  
00001EA2                          1774  I_TO_BUFF
00001EA2  14FC 0023               1775              MOVE.B      #'#',(A2)+
00001EA6  4EB8 1414               1776              JSR         MOVE_SIZE
00001EAA  0C06 0001               1777              CMPI.B      #$1,D6
00001EAE  6700 002C               1778              BEQ         B_TO_BUFF
00001EB2  0C06 0003               1779              CMPI.B      #$3,D6
00001EB6  6700 0052               1780              BEQ         W_2_BUFF        
00001EBA  0C06 0002               1781              CMPI.B      #$2,D6
00001EBE  6700 0078               1782              BEQ         L_TO_BUFF
00001EC2  4E75                    1783              RTS
00001EC4                          1784  
00001EC4                          1785  PC_W_DISP
00001EC4  4EB9 00001F0A           1786              JSR         W_2_BUFF
00001ECA  14FC 0028               1787              MOVE.B      #$28,(A2)+ **open parenthesis           
00001ECE  14FC 0050               1788              MOVE.B      #$50,(A2)+ **p
00001ED2  14FC 0043               1789              MOVE.B      #$43,(A2)+ **c
00001ED6  14FC 0029               1790              MOVE.B      #$29,(A2)+ **close parenthesis                 
00001EDA  4E75                    1791              RTS
00001EDC                          1792  
00001EDC                          1793  B_TO_BUFF   
00001EDC  14FC 0024               1794              MOVE.B  #'$',(A2)+
00001EE0  4284                    1795              CLR.L   D4 **freshen the data, old spice fresh
00001EE2  3410                    1796              MOVE.W  (A0),D2
00001EE4  4284                    1797              CLR.L   D4 **irish springs soap fresh
00001EE6  183C 0002               1798              MOVE.B  #2,D4 **counter
00001EEA                          1799  
00001EEA                          1800  BIT_TO_BIT_LOOP                 
00001EEA  B83C 0000               1801              CMP.B   #$00,D4
00001EEE  6700 0014               1802              BEQ     RTN_EA_0
00001EF2  E91A                    1803              ROL.B   #4,D2
00001EF4  3C02                    1804              MOVE.W  D2,D6
00001EF6  0246 000F               1805              ANDI.W  #$000F,D6
00001EFA  4EB8 1D7A               1806              JSR     HEX_TO_ASCII           
00001EFE  5304                    1807              SUBQ.B  #$1,D4
00001F00  4EF8 1EEA               1808              JMP     BIT_TO_BIT_LOOP
00001F04                          1809              
00001F04  3C07                    1810  RTN_EA_0      MOVE.W  D7,D6           
00001F06  5448                    1811              ADDQ.W  #2,A0  
00001F08  4E75                    1812              RTS
00001F0A                          1813  W_2_BUFF 
00001F0A  14FC 0024               1814              MOVE.B  #'$',(A2)+  
00001F0E  4284                    1815              CLR.L   D4
00001F10                          1816              *MOVE.B  #$24,(A2)+
00001F10  3410                    1817              MOVE.W  (A0),D2
00001F12  4284                    1818              CLR.L   D4
00001F14  183C 0004               1819              MOVE.B  #4,D4
00001F18                          1820  
00001F18                          1821  W_TO_BIT_LOOP                 
00001F18  B83C 0000               1822              CMP.B   #$00,D4 **word into byte
00001F1C  6700 0014               1823              BEQ     RTN_EA_1
00001F20  E95A                    1824              ROL.W   #4,D2
00001F22  3C02                    1825              MOVE.W  D2,D6
00001F24  0246 000F               1826              ANDI.W  #$000F,D6
00001F28  4EB8 1D7A               1827              JSR     HEX_TO_ASCII
00001F2C  5304                    1828              SUBQ.B  #$1,D4
00001F2E  4EF8 1F18               1829              JMP     W_TO_BIT_LOOP
00001F32                          1830              
00001F32  3C07                    1831  RTN_EA_1    MOVE.W  D7,D6 **returns a long effective address  
00001F34  5448                    1832              ADDQ.W  #2,A0
00001F36  4E75                    1833              RTS
00001F38                          1834  
00001F38                          1835  L_TO_BUFF
00001F38  14FC 0024               1836              MOVE.B  #'$',(A2)+ **loads a long into the buffer
00001F3C  4284                    1837              CLR.L   D4
00001F3E  2410                    1838              MOVE.L  (A0),D2
00001F40  4284                    1839              CLR.L   D4
00001F42  183C 0008               1840              MOVE.B  #8,D4
00001F46                          1841  
00001F46                          1842  L_TO_B_LOOP                 
00001F46  B83C 0000               1843              CMP.B   #$00,D4     * compare counter with 0
00001F4A  6700 0014               1844              BEQ     RTN_EA_2      * if zero, return
00001F4E  E99A                    1845              ROL.L   #4,D2       * roll the bits in D2 to the left
00001F50  3C02                    1846              MOVE.W  D2,D6       * move rolled bits into temp storage
00001F52  0246 000F               1847              ANDI.W  #$000F,D6   * and the bits to isolate ascii char   
00001F56  4EB8 1D7A               1848              JSR     HEX_TO_ASCII   * load ascii char into buffer            
00001F5A  5304                    1849              SUBQ.B  #$1,D4      * subtract from counter
00001F5C  4EF8 1F46               1850              JMP     L_TO_B_LOOP     * keep looping until counter hits zero
00001F60                          1851              
00001F60  3C07                    1852  RTN_EA_2      MOVE.W  D7,D6       * re-load current word for temp storage
00001F62  5848                    1853              ADDQ.W  #4,A0       * advancing memory pointer by long
00001F64  4E75                    1854              RTS                 * return from subroutine
00001F66                          1855  
00001F66                          1856  **opening menu page    
00004000                          1857              ORG     data
00004000                          1858  introduction_message       
00004000= 45 61 73 79 20 36 ...   1859               DC.B    'Easy 68k Disassembler by Brian Clark, Kemba Konteh and Jacob McHugh for CSS 422 Spring 2020',CR,LF,0
0000405E                          1860  
0000405E= 005E                    1861  introduction_message_len   DC.W    introduction_message_len-introduction_message
00004060                          1862          
00004060= 53 74 61 72 74 69 ...   1863  MESSAGE_START_ADDR     DC.B    'Starting Address $',0
00004074= 0014                    1864  str_len1    DC.W    str_len1-MESSAGE_START_ADDR
00004076                          1865  
00004076= 45 6E 64 69 6E 67 ...   1866  MESSAGE_END_ADDR     DC.B    'Ending Address $',0
00004088= 0012                    1867  str_len2    DC.W    str_len2-MESSAGE_END_ADDR
0000408A                          1868  
0000408A= 53 74 61 72 74 69 ...   1869  MESSAGE_END_ERROR1     DC.B    'Starting or ending address error',0
000040AC= 0022                    1870  str_len3    DC.W    str_len3-MESSAGE_END_ERROR1
000040AE                          1871  
000040AE= 49 6E 76 61 6C 69 ...   1872  MESSAGE_END_ERROR2   DC.B    'Invalid starting address',0
000040C8= FFE6                    1873  err_len1    DC.W    MESSAGE_END_ERROR2-err_len1
000040CA                          1874  
000040CA= 49 6E 76 61 6C 69 ...   1875  MESSAGE_END_ERROR3     DC.B    'Invalid Ending address',0
000040E2= FFE8                    1876  err_len2    DC.W    MESSAGE_END_ERROR3-err_len2
000040E4                          1877  
000040E4= 50 72 65 73 73 20 ...   1878  MESSAGE_CONTINUE   DC.B    'Press enter to continue',0
000040FC= FFE8                    1879  str_en_len  DC.W    MESSAGE_CONTINUE-str_en_len
000040FE                          1880  
000040FE= 52 75 6E 20 61 67 ...   1881  MESSAGE_MORE    DC.B    'Run again? Y=1, N=0: ',0
00004114= 0016                    1882  strMore_len DC.W    strMore_len-MESSAGE_MORE       
00004116                          1883  
00004116= 74 65 73 74 69 6E ...   1884  MESSAGE_TEST    DC.B    'testing testing testing',0
0000412E= FFE8                    1885  str_te_len  DC.W    MESSAGE_TEST-str_te_len
00004130                          1886  
00004130= 54 68 61 74 73 20 ...   1887  exit        DC.B    'Thats all folks',0
00004140= 0010                    1888  exit_len    DC.W    exit_len-exit           
00004142                          1889  
00004142= 01                      1890  goodbuff    DC.B   1
00004143                          1891                                   
00004143                          1892  
00004143                          1893  
00004143                          1894  
00004143                          1895  
00004143                          1896        
00004144  4E72 2700               1897  END         STOP    #$2700
00004148                          1898              END     start

No errors detected
No warnings generated


SYMBOL TABLE INFORMATION
Symbol-name         Value
-------------------------
ASCII_2_HEX         116A
BAD_INSTANCE        1CFE
BIT_TO_BIT_LOOP     1EEA
B_TO_BUFF           1EDC
CHECKA_START        1096
CHECK_ADD           1096
CLEAR               1084
CLEAR_REGISTERS     1D6A
CMD_S_1             1CC8
CMD_S_2             1CD0
CMD_S_3             1CE4
CMD_S_4             1CEA
CMPA_L              1680
CR                  D
C_2_HEX             11D8
DATA                4000
DECODE_OPCODE       1254
DECODE_RTN          126C
DEC_2_HEX           11CE
DIR_END             1A1C
DIR_L               1A0E
DIR_R               1A18
D_2_BUFF            1A00
EA_000              1DEC
EA_001              1DFE
EA_010              1E10
EA_011              1E2A
EA_100              1E48
EA_101              1E66
EA_110              1E6A
EA_111              1E6E
EA_M_TBL            1DBC
EIGHT_BITSHIFT      8
END                 4144
END1101             18EE
ENDINPUT            1168
END_0001            1324
END_0010            138A
END_0011            13F0
END_0100            14A8
END_1000            153C
END_1001            15AE
END_1010            1642
END_1011            1734
END_1100            1880
END_1110            19FE
END_BUFFER          1252
END_CHECKA          1106
END_IR              1A56
EQU_1               10CA
EQU_2               10DA
EQU_3               10EA
ERROR_ASCII         11EC
ERROR_CHECKA        10F0
ERR_LEN1            40C8
ERR_LEN2            40E2
EXIT                4130
EXIT_LEN            4140
FILL_ADDRESS        1200
FLAG_BAD            0
FLAG_GOOD           1
FOUR_BITSHIFT       4
F_ADD               10A2
GET_ADDR            1C50
GET_BAD_W           1D24
GET_DIR_BIT         1C46
GET_EA              1D92
GET_IR              1A1E
GET_LONG            1C6A
GET_OPCODE          1272
GET_SIZE            1BF4
GOODBUFF            4142
HEX_FOUR_0000       1AC0
HEX_FOUR_0001       1AC8
HEX_FOUR_0010       1AD0
HEX_FOUR_0011       1AD0
HEX_FOUR_0100       1AD8
HEX_FOUR_0101       1B06
HEX_FOUR_0110       1B0E
HEX_FOUR_0111       1B3C
HEX_FOUR_1000       1B44
HEX_FOUR_1001       1B5A
HEX_FOUR_1010       1B62
HEX_FOUR_1011       1B6A
HEX_FOUR_1100       1B72
HEX_FOUR_1101       1B7A
HEX_FOUR_1110       1B8A
HEX_FOUR_1111       1B82
HEX_ONE_0000        12EA
HEX_ONE_0001        12EA
HEX_ONE_0010        1326
HEX_ONE_0011        138C
HEX_ONE_0100        1446
HEX_ONE_0101        14AA
HEX_ONE_0110        14B2
HEX_ONE_0111        14BC
HEX_ONE_1000        14C4
HEX_ONE_1001        153E
HEX_ONE_1010        15B0
HEX_ONE_1011        1644
HEX_ONE_1100        1736
HEX_ONE_1101        1882
HEX_ONE_1110        18F0
HEX_ONE_1111        1A58
HEX_TO_ASCII        1D7A
HEX_TWO_1111        1BF2
H_REG_BITS          1C34
INPUT               1108
INTRODUCTION_MESSAGE  4000
INTRODUCTION_MESSAGE_LEN  405E
IR_CNT              1A38
IR_SZ               1A3C
I_TO_BUFF           1EA2
JMP_TBL_0100        1A60
LABEL1              28C
LABEL2              2AC
LABEL3              2E4
LABEL4              666
LENGTH              0
LETTER              1D8A
LF                  A
LOADTESTDATA        0
LOOP_TWO            117C
L_2_HEX             11E2
L_ADD               10B6
L_TO_BUFF           1F38
L_TO_B_LOOP         1F46
MAIN_BYTE           1C24
MAIN_END            1C32
MAIN_WORD           1C2E
MAX_ADD             FFFFFF
MESSAGE_CONTINUE    40E4
MESSAGE_END_ADDR    4076
MESSAGE_END_ERROR1  408A
MESSAGE_END_ERROR2  40AE
MESSAGE_END_ERROR3  40CA
MESSAGE_EXIT        1070
MESSAGE_INTRODUCTION_MESSAGE  105C
MESSAGE_MORE        40FE
MESSAGE_START_ADDR  4060
MESSAGE_TEST        4116
MIN_ADD             0
MOVE_L              1360
MOVE_LEA            1374
MOVE_PTR            1736
MOVE_SIZE           1414
MOVE_SIZEL          1440
MOVE_SIZEW          1436
MOVE_W              13C6
MOVE_WEA            13DA
M_SIZE_END          1444
OPADD               1898
OPADD01             18DA
OPCMP               16BA
OPCODE_JMPTBL       128A
OPEOR               16FA
OP_AND              175E
OP_AND01            17AC
OP_AND_EXG          173E
OP_ASM              19A0
OP_CMP              15C8
OP_CMPA             1684
OP_CMPE_OR          15B8
OP_CMP_ERROR        16AA
OP_EOR              1608
OP_EXGA2A           1804
OP_EXGD2A           1842
OP_EXGD2D           17C6
OP_JMP              1BC8
OP_JSR              1BAC
OP_LEA              1474
OP_LSM              19D2
OP_MOVEM            1B52
OP_OR               14DA
OP_OR01             1528
OP_RTS              1BE4
OP_SHIFT            18FE
OP_SHIFT_ASD        191A
OP_SHIFT_LSD        194E
OP_SHIFT_MEM        1982
OP_SUB              1558
OP_SUB01            159A
PC_W_DISP           1EC4
PREP_BUFFER         120E
P_COUNTER           14
REG_BITS            1E9A
RESUME              11B6
RETURN              11F6
RTN_EA_0            1F04
RTN_EA_1            1F32
RTN_EA_2            1F60
SIXTEEN_BITSHIFT    10
SIZE_TO_BUFF        1BFE
STACK               A000
START               1000
STARTINPUT          1016
STARTMAIN           1004
STRMORE_LEN         4114
STR_EN_LEN          40FC
STR_LEN1            4074
STR_LEN2            4088
STR_LEN3            40AC
STR_TE_LEN          412E
SUB_I               10B2
SUB_TWO             10C6
SWAP_4_MOVE         13F2
TWELVE_BITSHIFT     C
T_0                 0
T_1                 1
T_13                D
T_2                 2
WRITE_TO_BUFFER     1D8E
W_2_BUFF            1F0A
W_TO_BIT_LOOP       1F18
